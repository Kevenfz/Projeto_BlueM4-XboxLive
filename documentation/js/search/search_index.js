var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.209,1,2.333]],["body/controllers/AppController.html",[0,1.839,1,3.548,2,1.422,3,0.258,4,0.225,5,0.225,6,3.453,7,0.566,8,1.727,9,4.463,10,4.068,11,5.228,12,1.515,13,0.024,14,2.745,15,5.258,16,4.463,17,3.548,18,5.258,19,0.705,20,4.068,21,1.256,22,0.98,23,0.566,24,0.92,25,5.826,26,1.256,27,0.443,28,0.807,29,3.298,30,3.453,31,3.453,32,2.302,33,2.976,34,1.11,35,4.068,36,0.258,37,0.164,38,1.615,39,1.846,40,2.504,41,4.068,42,1.846,43,3.453,44,4.068,45,4.068,46,1.336,47,4.068,48,0.018,49,0.018]],["title/modules/AppModule.html",[50,1.136,51,2.333]],["body/modules/AppModule.html",[1,3.686,2,1.686,3,0.227,4,0.197,5,0.197,13,0.024,27,0.478,28,0.709,29,3.564,30,3.03,36,0.227,37,0.144,48,0.016,49,0.016,50,1.584,51,4.732,52,1.514,53,2.045,54,3.03,55,3.03,56,3.03,57,3.876,58,3.876,59,3.876,60,3.876,61,2.67,62,3.876,63,2.347,64,1.737,65,1.737,66,3.569,67,2.525,68,2.73,69,3.569,70,3.569,71,3.569,72,3.569,73,3.569,74,3.569,75,3.569]],["title/injectables/AppService.html",[29,1.956,76,0.943]],["body/injectables/AppService.html",[3,0.286,4,0.249,5,0.249,7,0.626,8,1.842,9,4.759,13,0.024,16,4.759,19,0.78,21,1.39,22,1.084,23,0.626,24,1.017,26,1.39,27,0.324,28,0.893,29,3.173,36,0.286,37,0.181,43,4.759,46,1.479,48,0.019,49,0.019,76,1.53,77,2.042,78,3.82,79,5.607,80,1.487,81,4.501,82,5.607,83,3.82,84,4.501,85,4.501]],["title/controllers/AuthController.html",[0,1.209,86,2.333]],["body/controllers/AuthController.html",[0,1.151,2,1.151,3,0.209,4,0.182,5,0.182,7,0.458,8,1.499,12,1.699,13,0.024,19,0.791,21,1.409,22,1.099,23,0.635,24,1.031,26,1.409,27,0.462,28,0.653,32,1.863,33,2.964,34,0.898,36,0.209,37,0.132,38,1.307,39,1.493,40,2.808,46,1.499,48,0.015,49,0.015,86,3.079,87,2.794,88,2.026,89,3.292,90,3.816,91,4.563,92,2.794,93,3.782,94,3.292,95,4.563,96,4.563,97,2.389,98,3.418,99,2.389,100,4.563,101,3.292,102,2.808,103,3.292,104,1.753,105,3.292,106,4.563,107,2.582,108,4.563,109,4.563,110,4.563,111,4.563,112,3.292,113,3.292,114,2.026,115,2.026,116,2.026,117,2.808,118,2.026,119,1.863,120,1.226,121,2.808,122,1.724,123,2.964,124,2.794,125,2.026,126,2.794,127,2.794,128,2.794,129,1.724,130,3.292,131,2.026,132,3.292,133,3.292,134,3.292,135,3.292,136,3.292,137,2.026,138,3.292,139,3.292]],["title/modules/AuthModule.html",[50,1.136,57,2.127]],["body/modules/AuthModule.html",[2,1.775,3,0.245,4,0.213,5,0.213,13,0.024,27,0.472,28,0.765,36,0.245,37,0.155,48,0.017,49,0.017,50,1.667,52,1.634,53,2.152,57,4.186,61,2.729,63,2.469,64,1.875,65,1.875,67,2.657,68,2.872,86,3.83,120,1.435,123,3.643,124,3.27,140,3.27,141,3.853,142,3.27,143,3.961,144,3.853,145,3.853,146,2.371,147,2.371,148,3.853,149,2.886,150,3.853,151,3.853,152,3.853,153,1.875,154,3.853,155,3.853,156,3.27,157,3.853,158,3.853,159,3.853]],["title/injectables/AuthService.html",[76,0.943,123,1.956]],["body/injectables/AuthService.html",[3,0.22,4,0.192,5,0.192,7,0.482,8,1.553,13,0.024,19,0.819,21,1.46,22,1.139,23,0.658,24,1.069,26,1.07,27,0.449,28,0.688,36,0.22,37,0.139,39,2.145,42,2.441,46,1.139,48,0.016,49,0.016,76,1.29,77,1.572,90,3.19,92,4.012,93,3.842,98,2.596,102,2.909,104,1.468,123,2.676,125,2.133,126,2.942,127,2.942,128,2.942,149,2.596,160,2.942,161,2.618,162,2.676,163,1.962,164,2.295,165,6.388,166,3.466,167,2.3,168,3.466,169,2.133,170,1.962,171,3.542,172,3.19,173,2.817,174,1.815,175,2.3,176,2.596,177,2.909,178,2.475,179,4.727,180,4.727,181,4.727,182,3.466,183,3.542,184,1.376,185,3.466]],["title/classes/CreateGameDto.html",[37,0.139,186,1.956]],["body/classes/CreateGameDto.html",[3,0.129,4,0.112,5,0.112,7,0.282,12,2.077,13,0.024,17,2.151,19,0.966,23,0.776,27,0.229,34,0.554,36,0.129,37,0.128,48,0.011,49,0.011,80,1.412,97,1.669,99,3.073,186,1.804,187,0.626,188,4.868,189,1.52,190,0.984,191,2.45,192,1.926,193,2.657,194,2.061,195,2.423,196,2.061,197,2.657,198,2.657,199,2.028,200,4.369,201,2.028,202,3.187,203,4.427,204,3.607,205,2.705,206,2.705,207,2.705,208,2.705,209,2.705,210,2.705,211,2.388,212,2.705,213,2.705,214,2.705,215,2.705,216,2.705,217,2.705,218,2.705,219,2.705,220,2.705,221,3.787,222,2.388,223,2.705,224,2.028,225,2.705,226,2.705,227,1.722,228,2.705,229,2.705,230,2.705,231,2.705,232,2.705,233,2.705,234,2.705,235,2.705,236,2.705,237,2.705,238,2.028,239,3.937,240,4.461,241,3.187,242,3.011,243,4.461,244,2.705,245,2.028,246,2.705,247,3.787,248,2.705,249,2.705,250,2.705,251,2.705,252,2.705,253,2.705,254,2.028,255,2.705,256,2.028,257,4.461,258,4.461,259,4.461,260,3.857,261,2.028,262,2.028,263,3.187,264,3.187,265,3.857,266,3.187,267,3.187,268,3.187,269,4.369,270,3.187,271,2.028,272,2.705,273,3.187,274,2.705,275,2.028,276,3.187,277,2.705,278,2.028,279,3.187,280,3.187,281,2.705,282,2.028,283,2.705,284,2.028,285,2.028,286,1.722,287,2.705,288,3.432,289,2.746,290,4.461,291,1.52,292,1.148,293,3.246,294,2.028,295,2.028,296,2.028,297,2.028,298,1.148]],["title/classes/CreateGeneroDto.html",[37,0.139,299,1.956]],["body/classes/CreateGeneroDto.html",[3,0.28,4,0.244,5,0.244,7,0.613,12,1.643,13,0.024,19,0.764,23,0.613,27,0.399,34,1.203,36,0.28,37,0.223,48,0.019,49,0.019,80,1.251,187,1.362,190,1.709,191,1.751,192,2.596,203,3.736,204,3.133,211,4.147,272,3.743,288,3.407,289,3.407,291,3.304,292,2.496,293,3.133,299,3.133,300,4.699,301,3.304,302,4.699,303,5.536,304,5.536,305,5.536,306,4.41]],["title/classes/CreatePerfilDto.html",[37,0.139,307,1.956]],["body/classes/CreatePerfilDto.html",[3,0.209,4,0.182,5,0.182,7,0.458,12,1.951,13,0.024,19,0.908,23,0.728,27,0.328,34,0.898,36,0.209,37,0.184,48,0.015,49,0.015,80,1.389,99,3.218,187,1.016,190,1.409,191,2.08,194,2.742,196,2.742,204,3.478,225,3.873,226,3.873,227,2.794,228,3.873,229,3.873,230,3.873,231,3.873,232,3.873,233,3.873,234,3.873,235,3.873,236,3.873,237,3.873,246,4.8,286,2.794,288,3.223,289,3.223,291,2.466,292,1.863,293,3.2,298,1.863,307,2.582,308,4.8,309,2.466,310,3.534,311,4.563,312,3.079,313,2.582,314,4.563,315,4.563,316,4.563,317,3.292,318,2.466,319,3.2,320,3.782,321,4.563,322,4.563,323,4.563,324,4.563,325,4.563,326,3.873,327,3.292,328,3.292,329,3.873,330,4.563,331,3.292,332,3.292]],["title/classes/CreateUserDto.html",[37,0.139,333,1.956]],["body/classes/CreateUserDto.html",[3,0.168,4,0.146,5,0.146,7,0.367,12,2.126,13,0.024,17,2.63,19,0.989,22,1.116,23,0.794,24,0.881,27,0.281,34,0.721,36,0.168,37,0.157,48,0.013,49,0.013,80,1.422,90,3.451,99,2.678,107,2.206,173,2.856,174,2.426,187,0.816,190,1.204,191,2.166,200,4.341,204,3.561,260,3.832,265,3.832,283,2.242,287,2.242,288,3.357,289,3.357,292,1.495,293,3.341,318,2.92,320,3.872,329,3.309,333,2.206,334,5.011,335,1.979,336,3.932,337,3.984,338,2.622,339,2.242,340,3.898,341,4.845,342,2.642,343,2.642,344,3.898,345,5.708,346,3.898,347,3.898,348,3.898,349,3.898,350,3.898,351,3.898,352,2.642,353,3.309,354,3.309,355,2.642,356,2.642,357,3.898,358,2.642,359,3.309,360,2.642,361,3.852,362,2.399,363,2.642,364,3.898,365,3.898,366,3.898,367,2.642,368,2.642,369,3.898,370,3.898,371,3.898,372,3.898,373,2.642,374,2.642,375,3.309,376,2.642,377,2.642,378,2.642,379,2.642,380,2.642,381,2.642,382,2.642,383,2.642,384,2.642,385,2.642]],["title/classes/Game.html",[37,0.139,386,1.682]],["body/classes/Game.html",[3,0.232,4,0.202,5,0.202,7,0.508,13,0.024,19,1.177,23,0.945,24,1.433,27,0.263,36,0.232,37,0.147,48,0.017,49,0.017,80,1.564,187,1.127,190,1.512,191,2.194,192,2.517,193,3.728,194,2.892,195,3.4,196,2.892,197,3.728,198,3.728,255,4.155,386,2.382,387,3.097,388,3.4,389,2.057,390,3.4,391,3.983,392,3.649,393,3.649,394,3.649,395,3.649,396,3.649,397,3.649,398,3.649,399,3.649,400,3.649,401,3.649,402,3.649,403,3.649]],["title/controllers/GameController.html",[0,1.209,404,2.333]],["body/controllers/GameController.html",[0,0.83,2,0.83,3,0.151,4,0.131,5,0.131,7,0.33,8,1.182,12,1.941,13,0.024,14,1.602,19,0.903,21,1.497,22,1.168,23,0.675,24,1.096,26,1.609,27,0.433,28,0.471,32,1.344,33,3.104,34,0.648,36,0.151,37,0.096,38,0.943,40,3.207,46,1.593,48,0.012,49,0.012,80,1.359,88,1.461,97,2.872,104,1.79,114,2.675,115,1.461,116,1.461,117,2.215,118,1.461,119,1.344,120,0.884,121,2.215,122,1.243,129,1.884,131,1.461,137,1.461,184,1.726,186,3.322,203,3.701,242,3.701,313,2.037,386,1.751,389,2.443,404,2.428,405,2.015,406,1.258,407,2.36,408,2.037,409,1.972,410,1.461,411,1.602,412,2.428,413,2.374,414,1.344,415,1.778,416,2.428,417,3.104,418,3.701,419,4.109,420,3.104,421,2.374,422,1.778,423,2.428,424,2.215,425,4.116,426,2.374,427,1.344,428,1.778,429,2.696,430,2.374,431,1.344,432,4.116,433,2.984,434,1.778,435,2.428,436,2.374,437,1.602,438,1.602,439,2.46,440,2.015,441,1.155,442,2.696,443,2.374,444,1.155,445,1.344,446,2.374,447,2.374,448,2.374,449,1.602,450,1.778,451,2.374,452,1.778,453,2.374,454,1.602,455,2.696,456,2.374,457,1.602,458,1.602,459,1.778,460,2.374]],["title/modules/GameModule.html",[50,1.136,58,2.127]],["body/modules/GameModule.html",[2,1.888,3,0.269,4,0.234,5,0.234,13,0.024,27,0.465,28,0.841,36,0.269,37,0.171,48,0.018,49,0.018,50,1.774,52,1.798,53,2.289,58,4.181,61,2.8,63,2.627,64,2.063,65,2.063,67,2.827,68,3.056,120,1.579,146,2.609,147,2.609,153,2.063,404,4.009,439,3.738,440,3.598,461,3.598,462,4.239,463,3.598,464,4.239,465,4.239,466,2.86]],["title/injectables/GameService.html",[76,0.943,439,1.956]],["body/injectables/GameService.html",[3,0.127,4,0.11,5,0.11,7,0.277,8,1.033,13,0.024,19,0.927,21,1.485,22,1.158,23,0.711,24,1.087,26,1.485,27,0.385,28,0.396,36,0.127,37,0.08,38,0.792,39,0.905,42,1.767,46,1.452,48,0.011,49,0.011,76,0.858,77,0.905,80,1.29,104,1.677,107,1.129,122,1.044,161,2.776,162,1.129,163,1.129,164,1.755,167,1.895,169,2.72,170,1.129,172,2.628,175,2.151,177,2.72,178,2.315,184,1.249,186,3.028,190,0.971,191,1.755,192,2.03,193,2.983,194,2.315,195,2.72,196,2.315,197,2.983,198,2.983,298,3.654,312,1.346,362,1.228,389,2.317,406,1.362,407,2.151,408,1.78,409,1.427,410,1.936,414,1.78,420,2.204,427,1.78,431,1.78,432,3.305,433,2.72,439,1.78,441,0.971,442,2.356,444,0.971,467,1.693,468,3.894,469,1.994,470,1.994,471,1.994,472,1.994,473,1.994,474,2.356,475,1.994,476,1.494,477,1.346,478,3.829,479,1.994,480,1.346,481,1.129,482,1.346,483,1.228,484,1.994,485,4.42,486,2.917,487,1.994,488,1.693,489,1.693,490,2.983,491,1.494,492,2.917,493,2.917,494,2.917,495,2.628,496,2.917,497,2.917,498,2.983,499,1.693,500,1.994,501,1.994,502,1.994,503,1.994,504,1.994,505,1.994,506,1.994,507,2.67,508,1.994,509,3.145,510,1.994,511,1.346,512,2.356,513,1.994,514,1.994,515,1.994,516,1.994,517,1.994,518,1.994,519,1.994,520,1.994,521,1.994,522,1.994,523,1.994]],["title/classes/Genero.html",[37,0.139,192,1.373]],["body/classes/Genero.html",[3,0.281,4,0.245,5,0.245,7,0.616,13,0.024,19,1.101,23,0.884,24,1.509,27,0.319,36,0.281,37,0.178,48,0.019,49,0.019,80,1.436,187,1.366,190,1.713,192,2.599,386,2.153,388,3.73,389,2.257,390,3.73,391,4.287,524,3.756,525,4.425,526,4.425,527,4.425,528,4.425,529,3.756]],["title/controllers/GeneroController.html",[0,1.209,530,2.333]],["body/controllers/GeneroController.html",[0,0.824,2,0.824,3,0.15,4,0.13,5,0.13,7,0.328,8,1.176,12,1.935,13,0.024,14,1.59,19,0.9,21,1.492,22,1.164,23,0.672,24,1.092,26,1.604,27,0.432,28,0.468,32,1.334,33,3.096,34,0.643,36,0.15,37,0.095,38,0.936,40,3.197,46,1.587,48,0.012,49,0.012,80,1.356,88,1.45,97,2.864,102,2.973,104,1.788,114,2.663,115,1.45,116,1.45,117,2.202,118,1.45,119,1.334,120,0.878,121,2.202,122,1.234,129,1.874,131,1.45,137,1.45,184,1.718,192,2.326,242,3.691,299,3.315,313,2.026,389,2.44,406,1.251,407,2.351,408,2.026,409,1.963,410,1.45,411,1.59,412,2.415,414,1.334,415,1.766,416,2.415,417,3.096,418,3.691,419,4.098,420,3.096,422,1.766,423,2.415,424,2.202,427,1.334,428,1.766,429,2.681,431,1.334,434,1.766,435,2.415,437,1.59,438,1.59,441,1.147,444,1.147,445,1.334,449,1.59,450,1.766,452,1.766,454,1.59,455,2.681,457,1.59,458,1.59,459,1.766,530,2.415,531,2,532,2.357,533,2.357,534,3.62,535,2.357,536,2.357,537,3.604,538,2.357,539,2.449,540,2,541,2.681,542,2,543,2.357,544,2.357,545,2.357,546,2.357,547,2.357,548,2.357,549,2.357]],["title/modules/GeneroModule.html",[50,1.136,59,2.127]],["body/modules/GeneroModule.html",[2,1.888,3,0.269,4,0.234,5,0.234,13,0.024,27,0.465,28,0.841,36,0.269,37,0.171,48,0.018,49,0.018,50,1.774,52,1.798,53,2.289,59,4.181,61,2.8,63,2.627,64,2.063,65,2.063,67,2.827,68,3.056,120,1.579,146,2.609,147,2.609,153,2.063,466,2.86,530,4.009,539,3.738,540,3.598,550,3.598,551,3.598,552,4.239,553,4.239,554,4.239]],["title/injectables/GeneroService.html",[76,0.943,539,1.956]],["body/injectables/GeneroService.html",[3,0.154,4,0.134,5,0.134,7,0.338,8,1.202,13,0.024,19,0.958,21,1.625,22,1.267,23,0.732,24,1.189,26,1.625,27,0.413,28,0.482,36,0.154,37,0.098,38,0.964,39,1.101,42,1.998,46,1.611,48,0.012,49,0.012,76,0.998,77,1.101,80,1.367,99,1.271,102,3.637,104,1.768,107,1.373,122,1.271,161,2.942,162,1.373,163,1.373,164,1.947,167,1.78,169,3.018,170,1.373,175,2.386,177,3.018,178,2.568,184,1.453,192,1.749,299,3.345,312,1.637,389,2.295,406,1.54,407,2.386,408,2.071,409,1.998,410,2.252,414,2.071,420,2.493,427,2.071,431,1.373,441,1.181,444,1.181,480,1.637,481,1.373,482,1.637,486,3.3,488,2.06,489,2.06,490,3.309,491,1.818,492,3.3,493,3.3,494,3.3,495,2.469,496,3.3,497,3.3,498,2.972,511,1.637,512,2.741,537,3.637,539,2.071,541,2.741,542,2.06,555,2.06,556,2.426,557,2.426,558,2.426,559,2.426,560,2.426,561,2.426,562,2.426,563,2.426,564,2.426,565,2.426,566,2.426]],["title/injectables/JwtStrategy.html",[76,0.943,143,2.127]],["body/injectables/JwtStrategy.html",[3,0.234,4,0.204,5,0.204,7,0.513,8,1.62,13,0.024,19,0.855,21,1.523,22,1.188,23,0.825,24,1.115,26,1.139,27,0.427,28,0.732,36,0.234,37,0.148,38,1.465,39,1.674,42,1.674,46,1.212,48,0.017,49,0.017,76,1.346,77,1.674,80,0.834,104,1.346,120,1.374,143,3.035,153,1.796,156,3.132,161,2.703,162,2.089,163,2.089,164,2.355,167,2.4,169,2.271,170,2.089,173,2.583,175,1.796,176,2.765,177,2.271,178,1.932,183,2.765,184,1.465,222,2.765,361,2.49,474,2.765,490,3.328,567,3.132,568,4.932,569,3.69,570,4.932,571,4.932,572,3.69,573,3.69,574,3.69,575,3.69,576,3.69,577,3.132,578,2.089,579,3.69,580,3.69,581,3.69,582,3.69,583,3.69,584,3.69,585,3.69,586,3.69,587,3.69,588,3.69,589,3.132,590,3.69]],["title/classes/LoginDto.html",[37,0.139,93,2.127]],["body/classes/LoginDto.html",[3,0.266,4,0.231,5,0.231,7,0.582,12,1.994,13,0.024,19,0.928,23,0.745,27,0.385,34,1.142,36,0.266,37,0.215,48,0.018,49,0.018,80,1.407,93,3.296,173,3.369,174,3.092,187,1.292,190,1.654,191,2.127,204,3.523,288,3.634,289,3.634,292,2.369,293,3.342,318,3.135,320,3.831,341,4.545,375,4.545,591,3.552,592,4.185,593,5.355,594,4.185,595,4.545,596,4.185]],["title/classes/LoginResponseDto.html",[37,0.139,125,2.127]],["body/classes/LoginResponseDto.html",[3,0.268,4,0.234,5,0.234,7,0.588,12,2.007,13,0.024,19,0.934,23,0.749,27,0.388,34,1.153,36,0.268,37,0.17,48,0.018,49,0.018,80,1.218,90,3.636,98,4.835,104,1.801,122,2.212,125,3.316,153,2.622,187,1.305,190,1.664,191,2.14,204,3.05,293,3.357,320,3.316,339,4.573,417,3.05,597,5.035,598,3.586,599,5.388,600,5.388,601,4.225,602,5.388,603,4.225]],["title/classes/Perfil.html",[37,0.139,319,1.956]],["body/classes/Perfil.html",[3,0.252,4,0.22,5,0.22,7,0.552,13,0.024,19,1.145,23,0.919,24,1.515,27,0.373,36,0.252,37,0.16,48,0.018,49,0.018,80,1.467,104,1.771,122,2.079,187,1.226,190,1.598,194,3.015,196,3.015,310,3.886,319,2.929,386,2.802,388,3.544,389,2.145,390,3.544,391,4.118,529,3.369,604,3.369,605,3.969,606,3.969,607,3.969,608,3.969,609,3.969,610,3.969,611,3.969]],["title/controllers/PerfilController.html",[0,1.209,612,2.333]],["body/controllers/PerfilController.html",[0,0.868,2,0.868,3,0.158,4,0.137,5,0.137,7,0.345,8,1.222,12,1.979,13,0.024,14,1.675,19,0.921,21,1.531,22,1.194,23,0.69,24,1.121,26,1.641,27,0.438,28,0.493,32,1.405,33,3.157,34,0.677,36,0.158,37,0.1,38,0.986,40,3.27,46,1.629,48,0.013,49,0.013,80,1.375,88,1.527,97,2.921,99,1.948,104,1.522,114,2.747,115,1.527,116,1.527,117,2.29,118,1.527,119,1.405,120,0.924,121,2.29,129,1.299,131,1.527,137,1.527,184,1.773,307,3.367,313,2.807,319,3.367,389,2.374,406,1.301,407,2.413,408,2.106,409,1.688,410,1.527,411,1.675,412,2.511,415,1.859,416,2.511,417,3.157,418,3.764,422,1.859,423,2.511,424,2.29,425,3.158,427,1.405,428,1.859,429,2.788,434,1.859,435,2.511,437,1.675,438,1.675,441,1.208,444,1.208,445,1.405,449,1.675,450,1.859,452,1.859,454,1.675,457,1.675,458,1.675,483,1.527,612,2.511,613,2.106,614,2.482,615,2.106,616,2.482,617,4.959,618,2.482,619,2.482,620,2.106,621,3.661,622,3.721,623,3.721,624,3.721,625,2.482,626,2.527,627,2.106,628,2.788,629,2.106,630,2.482,631,2.482,632,2.482,633,2.482,634,2.482,635,2.482,636,2.482,637,2.482,638,2.482]],["title/modules/PerfilModule.html",[50,1.136,60,2.127]],["body/modules/PerfilModule.html",[2,1.888,3,0.269,4,0.234,5,0.234,13,0.024,27,0.465,28,0.841,36,0.269,37,0.171,48,0.018,49,0.018,50,1.774,52,1.798,53,2.289,60,4.181,61,2.8,63,2.627,64,2.063,65,2.063,67,2.827,68,3.056,120,1.579,146,2.609,147,2.609,153,2.063,466,2.86,612,4.009,626,3.738,627,3.598,639,3.598,640,3.598,641,4.239,642,4.239,643,4.239]],["title/injectables/PerfilService.html",[76,0.943,626,1.956]],["body/injectables/PerfilService.html",[3,0.139,4,0.121,5,0.121,7,0.304,8,1.111,13,0.025,19,0.959,21,1.551,22,1.333,23,0.739,24,1.136,26,1.551,27,0.399,28,0.434,36,0.139,37,0.088,38,0.869,39,0.992,42,1.534,46,1.527,48,0.011,49,0.011,76,0.922,77,0.992,80,1.4,104,1.127,161,2.584,162,1.238,163,1.238,164,1.846,167,2.01,170,1.238,172,2.788,175,2.01,184,1.342,190,1.044,192,1.846,194,2.781,195,2.08,196,2.781,298,3.757,307,3.134,319,1.238,338,1.913,362,1.346,386,2.261,389,2.337,406,1.445,407,2.261,408,1.913,409,1.534,427,1.913,441,1.064,444,1.064,474,1.639,476,1.639,477,1.476,478,4.492,480,1.476,481,1.238,482,1.476,483,1.346,498,3.136,507,3.506,511,1.476,512,2.533,615,2.869,620,2.869,621,3.407,626,1.913,628,2.533,629,1.857,644,1.857,645,4.131,646,2.188,647,3.38,648,2.188,649,3.38,650,2.188,651,2.188,652,2.188,653,2.188,654,2.188,655,2.188,656,4.647,657,2.188,658,2.188,659,2.188,660,2.188,661,2.188,662,3.38,663,2.188,664,2.188,665,2.188,666,2.188,667,2.188,668,2.188,669,2.188]],["title/modules/PrismaModule.html",[50,1.136,61,1.466]],["body/modules/PrismaModule.html",[3,0.289,4,0.252,5,0.252,13,0.024,27,0.406,28,0.903,36,0.289,37,0.183,48,0.019,49,0.019,50,1.854,52,1.928,53,2.393,61,2.89,63,2.746,64,2.213,65,2.213,67,2.955,164,2.804,670,3.86,671,3.86,672,3.86,673,4.548,674,5.643,675,4.548]],["title/injectables/PrismaService.html",[76,0.943,164,1.373]],["body/injectables/PrismaService.html",[3,0.266,4,0.231,5,0.231,7,0.582,8,1.759,13,0.024,19,0.928,21,1.292,22,1.008,23,0.582,24,0.946,26,1.654,27,0.385,28,0.831,36,0.266,37,0.168,48,0.018,49,0.018,76,1.461,77,1.899,161,3.256,164,2.127,175,2.606,483,2.575,578,3.031,676,3.552,677,5.012,678,5.355,679,6.582,680,5.355,681,6.225,682,4.185,683,3.552,684,4.185,685,4.185,686,4.185,687,4.185,688,4.185]],["title/classes/UpdateGamesDto.html",[37,0.139,433,2.127]],["body/classes/UpdateGamesDto.html",[3,0.321,4,0.28,5,0.28,13,0.024,27,0.433,34,1.38,36,0.321,37,0.203,48,0.02,49,0.02,186,2.862,187,1.561,189,3.788,406,1.768,433,3.704,442,3.788,578,2.862,689,4.292,690,3.412,691,5.056]],["title/classes/UpdateGeneroDto.html",[37,0.139,537,2.127]],["body/classes/UpdateGeneroDto.html",[3,0.321,4,0.28,5,0.28,13,0.024,27,0.433,34,1.38,36,0.321,37,0.203,48,0.02,49,0.02,187,1.561,299,2.862,301,3.788,406,1.768,537,3.704,541,3.788,578,2.862,690,3.412,692,4.292,693,5.056]],["title/classes/UpdatePerfilDto.html",[37,0.139,621,2.127]],["body/classes/UpdatePerfilDto.html",[3,0.321,4,0.28,5,0.28,13,0.024,27,0.433,34,1.38,36,0.321,37,0.203,48,0.02,49,0.02,187,1.561,307,2.862,309,3.788,406,1.768,578,2.862,621,3.704,628,3.788,690,3.412,694,4.292,695,5.056]],["title/classes/UpdateUserDto.html",[37,0.139,696,2.127]],["body/classes/UpdateUserDto.html",[3,0.313,4,0.272,5,0.272,13,0.023,22,1.186,27,0.426,34,1.343,36,0.313,37,0.198,42,2.234,48,0.02,49,0.02,174,2.578,187,1.52,333,2.787,335,3.689,336,4.179,338,2.787,406,1.722,578,2.787,690,3.322,696,3.646,697,4.179,698,4.923,699,4.923,700,3.689,701,4.923]],["title/classes/User.html",[37,0.139,104,0.943]],["body/classes/User.html",[3,0.253,4,0.22,5,0.22,7,0.554,13,0.023,19,1.162,22,1.389,23,0.933,24,1.516,36,0.253,37,0.16,48,0.018,49,0.018,80,1.546,104,1.415,173,3.02,174,3.02,187,1.229,190,1.601,337,3.892,338,3.264,359,4.401,388,3.549,389,2.148,390,3.549,391,4.123,702,3.379,703,3.981,704,3.981,705,3.981,706,3.981,707,3.981,708,3.981,709,3.981,710,3.981]],["title/controllers/UserController.html",[0,1.209,711,2.333]],["body/controllers/UserController.html",[0,0.818,2,0.818,3,0.149,4,0.129,5,0.129,7,0.325,8,1.169,12,1.929,13,0.024,19,0.897,21,1.599,22,1.247,23,0.72,24,1.171,26,1.599,27,0.421,28,0.464,32,1.324,33,1.324,34,0.638,36,0.149,37,0.094,38,0.929,39,1.062,46,1.701,48,0.012,49,0.012,80,1.353,88,1.44,97,3.06,104,1.846,114,2.191,115,1.44,116,1.44,117,2.191,118,1.44,119,1.324,120,0.871,121,3.187,129,1.225,131,1.44,137,2.963,184,1.711,242,3.943,313,2.015,320,3.596,333,3.087,389,2.47,406,1.245,407,1.732,409,1.615,411,1.579,412,2.402,414,1.324,416,2.402,417,3.087,418,3.681,419,4.378,420,3.307,423,3.248,424,2.191,431,1.324,435,2.402,437,1.579,438,1.579,441,1.139,444,1.139,445,1.324,449,1.579,454,1.579,455,3.227,457,1.579,458,1.579,459,1.753,696,3.596,700,2.667,711,2.402,712,1.986,713,3.021,714,1.986,715,2.34,716,2.34,717,2.34,718,1.986,719,2.34,720,3.559,721,2.34,722,1.986,723,2.34,724,2.34,725,2.34,726,2.34,727,2.438,728,1.986,729,1.986,730,2.34,731,2.34,732,5.179,733,2.34,734,2.34,735,2.34,736,2.34,737,2.34,738,2.34,739,2.34,740,2.34,741,2.34]],["title/injectables/UserService.html",[76,0.943,727,1.956]],["body/injectables/UserService.html",[3,0.125,4,0.108,5,0.108,7,0.273,8,1.02,13,0.024,19,0.921,21,1.567,22,1.327,23,0.739,24,1.147,26,1.473,27,0.383,28,0.389,36,0.125,37,0.079,38,0.779,39,0.89,42,1.748,46,1.439,48,0.01,49,0.01,76,0.847,77,0.89,80,1.283,102,3.392,104,1.769,107,1.11,161,3.05,162,1.11,163,1.11,164,1.739,167,1.51,169,2.371,170,1.11,171,2.326,172,2.599,173,1.625,174,2.017,175,2.586,176,1.47,177,2.937,178,2.499,184,1.739,190,0.959,265,1.47,298,3.508,333,2.872,337,2.095,338,2.18,361,2.095,362,1.207,388,1.91,389,2.358,390,1.91,406,1.347,407,1.51,409,1.748,414,1.757,417,1.11,420,1.757,431,1.11,441,0.955,444,0.955,476,1.47,477,1.324,478,3.281,480,1.324,481,1.11,482,1.324,486,2.886,490,3.424,491,1.47,492,2.326,493,2.326,494,2.326,495,2.095,496,2.326,497,2.326,498,2.955,511,1.324,589,1.665,696,3.392,700,2.326,713,2.635,714,2.635,718,2.635,722,2.635,727,1.757,729,1.665,742,1.665,743,3.852,744,1.962,745,1.962,746,1.962,747,1.962,748,1.962,749,1.962,750,1.962,751,1.962,752,1.962,753,1.962,754,1.665,755,1.962,756,1.962,757,1.962,758,1.962,759,1.962,760,1.962,761,1.962,762,1.665,763,1.962,764,1.962,765,4.379,766,1.962,767,1.962,768,3.104,769,3.104,770,3.104,771,3.104,772,3.104,773,1.962,774,2.635,775,1.962,776,3.104,777,3.104,778,3.104,779,1.962,780,1.962,781,3.104,782,1.962,783,1.962,784,1.962]],["title/modules/UsersModule.html",[50,1.136,62,2.127]],["body/modules/UsersModule.html",[2,1.884,3,0.268,4,0.234,5,0.234,13,0.024,27,0.465,28,0.839,36,0.268,37,0.17,48,0.018,49,0.018,50,1.77,52,1.792,53,2.285,61,2.798,62,4.178,63,2.622,64,2.056,65,2.056,67,2.821,68,3.05,119,2.391,120,1.574,146,2.6,147,2.6,153,2.056,466,2.851,711,4.003,727,3.735,728,3.586,785,3.586,786,4.225,787,3.586,788,4.225,789,4.225]],["title/coverage.html",[790,3.535]],["body/coverage.html",[0,1.999,1,1.79,5,0.147,6,2.251,13,0.024,23,0.369,29,1.501,37,0.265,48,0.013,49,0.013,76,1.655,78,2.251,86,1.79,87,2.251,93,1.632,104,1.067,123,1.501,125,1.632,129,1.389,143,1.632,160,2.251,164,1.053,167,1.291,178,1.389,186,1.501,188,2.251,189,2.929,192,1.553,260,5.323,299,1.501,300,2.251,301,2.929,307,1.501,308,2.251,309,2.929,310,1.79,319,1.501,333,1.501,334,2.251,335,2.929,386,1.902,387,2.251,404,1.79,405,2.251,433,1.632,439,1.501,445,1.501,467,2.251,481,1.501,524,2.251,530,1.79,531,2.251,534,1.987,537,1.632,539,1.501,555,2.251,567,2.251,591,2.251,597,2.251,598,2.251,604,2.251,612,1.79,613,2.251,621,1.632,626,1.501,644,2.251,676,2.251,689,2.251,692,2.251,694,2.251,696,1.632,697,2.251,702,2.251,711,1.79,712,2.251,727,1.501,742,2.251,790,1.987,791,2.652,792,2.652,793,2.652,794,4.643,795,5.716,796,2.251,797,6.193,798,6.636,799,3.909,800,2.652,801,5.124,802,5.124,803,2.652,804,3.909,805,2.251,806,3.909,807,2.251,808,2.652,809,3.318,810,2.251,811,3.318,812,3.318,813,2.251,814,3.318,815,3.318,816,3.318,817,3.318,818,2.251,819,2.652,820,2.652]],["title/dependencies.html",[53,1.763,821,2.449]],["body/dependencies.html",[13,0.024,28,0.87,31,4.679,34,1.195,37,0.222,48,0.019,49,0.019,53,1.858,120,1.632,149,3.282,153,2.132,171,3.282,292,2.479,326,3.718,483,2.696,577,5.12,762,3.718,822,6.032,823,4.38,824,4.38,825,4.38,826,4.38,827,4.38,828,4.38,829,4.38,830,4.38,831,4.38,832,4.38,833,4.38,834,4.38,835,4.38,836,4.38,837,4.38,838,4.38,839,4.38,840,4.38,841,4.38,842,4.38,843,4.38,844,4.38,845,4.38,846,4.38,847,4.38]],["title/miscellaneous/functions.html",[848,1.947,849,3.529]],["body/miscellaneous/functions.html",[7,0.703,13,0.022,21,1.561,22,1.218,23,0.703,24,1.143,26,1.561,48,0.02,49,0.02,481,3.407,805,4.292,807,5.455,818,4.292,848,3.412,849,4.292,850,5.056,851,5.056,852,5.056,853,6.426,854,5.056]],["title/index.html",[7,0.401,855,2.886,856,2.886]],["body/index.html",[4,0.222,13,0.024,48,0.018,49,0.018,83,3.4,191,1.591,683,3.4,790,3.001,857,4.006,858,4.006,859,5.206,860,4.006,861,4.006,862,4.006,863,4.006,864,4.006,865,5.784,866,4.006,867,4.006,868,4.006,869,4.006,870,6.624,871,4.006,872,4.006,873,6.505,874,4.006,875,4.006,876,5.206,877,4.006,878,4.006,879,4.006,880,4.006,881,5.206,882,5.206,883,4.006,884,4.006,885,4.006,886,5.206,887,5.206,888,4.006,889,4.006,890,4.006,891,4.006,892,4.006,893,3.4,894,4.006,895,4.006,896,4.006,897,4.006,898,4.006,899,4.006,900,4.006,901,4.006,902,4.006,903,4.006,904,3.4,905,4.006,906,4.006,907,4.006,908,4.006,909,4.006,910,4.006,911,3.4]],["title/modules.html",[52,2.001]],["body/modules.html",[13,0.02,48,0.02,49,0.02,51,3.261,52,2.049,57,2.974,58,2.974,59,2.974,60,2.974,61,2.049,62,2.974,893,5.859,912,6.903,913,6.903,914,6.903]],["title/overview.html",[915,4.005]],["body/overview.html",[2,1.212,13,0.024,29,3.045,48,0.016,49,0.016,51,4.681,52,1.47,53,2.005,54,2.942,55,2.942,56,2.942,57,4.058,58,3.932,59,3.932,60,3.932,61,2.855,62,3.932,63,2.3,64,1.686,65,1.686,77,1.572,123,3.045,140,2.942,142,2.942,143,3.311,164,2.537,187,1.07,439,3.045,461,2.942,463,2.942,539,3.045,550,2.942,551,2.942,626,3.045,639,2.942,640,2.942,670,2.942,671,2.942,672,2.942,727,3.045,785,2.942,787,2.942,915,2.942,916,3.466,917,3.466,918,3.466,919,3.466]],["title/properties.html",[190,1.284,821,2.449]],["body/properties.html",[13,0.024,48,0.021,49,0.021,190,1.644,191,2.114,904,4.518,911,4.518,920,5.323,921,5.323,922,5.323]],["title/miscellaneous/variables.html",[848,1.947,923,3.529]],["body/miscellaneous/variables.html",[7,0.288,11,1.76,13,0.024,17,1.399,22,0.781,23,0.555,42,2.223,46,0.681,48,0.011,49,0.011,97,1.698,99,2.72,104,1.232,107,1.835,129,1.698,161,1.943,167,2.384,173,2.091,174,2.091,175,2.197,178,1.086,183,1.553,184,0.823,191,1.586,192,2.293,193,2.694,194,2.091,195,2.457,196,2.364,197,2.694,198,2.694,203,2.188,205,1.76,206,1.76,207,1.76,208,1.76,209,1.76,210,2.752,211,2.429,212,1.76,213,1.76,214,2.752,215,2.752,216,1.76,217,3.389,218,1.76,219,4.159,220,2.752,221,3.389,222,1.553,223,1.76,244,1.76,247,1.76,248,1.76,249,1.76,250,1.76,251,1.76,252,1.76,253,1.76,269,3.832,274,1.76,277,1.76,281,1.76,298,1.174,302,1.76,310,2.188,312,1.399,313,1.174,337,2.188,338,1.835,353,1.76,354,1.76,361,1.399,362,3.554,386,1.578,406,1.396,409,1.811,424,1.276,445,1.174,477,3.897,495,1.399,499,1.76,534,2.429,595,1.76,677,3.832,754,2.752,774,1.76,796,2.752,809,1.76,810,2.752,811,1.76,812,3.389,813,2.752,814,1.76,815,3.389,816,1.76,817,3.389,848,1.399,923,1.76,924,3.242,925,3.242,926,2.073,927,3.242,928,3.242,929,5.195,930,2.073,931,2.073,932,2.073,933,3.242,934,3.242,935,2.073,936,2.073,937,2.073,938,2.073,939,2.073,940,2.073,941,2.073,942,2.073,943,2.073,944,2.073,945,2.073,946,2.073,947,2.073,948,2.073,949,2.073,950,2.073,951,2.073,952,2.073,953,2.073,954,2.073,955,2.073,956,3.242,957,3.242,958,2.073,959,2.073,960,2.073,961,2.073,962,2.073,963,2.073,964,2.073,965,3.242,966,2.073,967,2.073,968,2.073,969,2.073,970,2.073,971,2.073,972,3.242,973,2.073,974,2.073,975,2.073,976,2.073,977,2.073,978,2.073,979,2.073,980,2.073,981,2.073,982,2.073,983,2.073,984,2.073,985,2.073,986,2.073,987,2.073,988,2.073,989,2.073,990,2.073,991,2.073,992,2.073,993,2.073,994,2.073,995,2.073,996,2.073,997,2.073,998,2.073,999,2.073,1000,2.073,1001,2.073,1002,2.073,1003,2.073,1004,2.073,1005,2.073,1006,2.073,1007,2.073,1008,2.073,1009,2.073,1010,2.073,1011,2.073,1012,2.073,1013,2.073,1014,2.073,1015,2.073,1016,2.073,1017,2.073,1018,2.073,1019,2.073,1020,2.073]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":260,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["0.0.1",{"_index":921,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["0.5.3",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":798,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":800,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":794,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":795,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":250,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["02/05/2021",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["04",{"_index":249,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["0ced",{"_index":234,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["1.0.0",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["1.0.1",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":774,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["111.222.333",{"_index":353,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["14",{"_index":919,"title":{},"body":{"overview.html":{}}}],["17/10/2013",{"_index":281,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["186a7c97",{"_index":228,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["22",{"_index":934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["222.333.444",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["24h",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["27/10/2021",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["27t",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3",{"_index":267,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["3.0.2",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["3.14.0",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["4.0.0",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["44",{"_index":354,"title":{},"body":{"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["4737",{"_index":230,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["4e11",{"_index":235,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["5",{"_index":269,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["5.'})@ispositive()@apiproperty({description",{"_index":262,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["5.'})@max(5",{"_index":261,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["5.0.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["59ae048d0052",{"_index":232,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["6",{"_index":917,"title":{},"body":{"overview.html":{}}}],["66",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7",{"_index":916,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":918,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":822,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":824,"title":{},"body":{"dependencies.html":{}}}],["8.2.1",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["8bf0de0c5d36",{"_index":237,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["9]{2",{"_index":350,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{2})|([0",{"_index":348,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{2}[\\.]?[0",{"_index":344,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{3",{"_index":349,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{3}[\\.]?[0",{"_index":345,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{3}[\\/]?[0",{"_index":346,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["9]{4",{"_index":347,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["_",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["a030",{"_index":229,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["abeb",{"_index":236,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["acesso",{"_index":493,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["admin",{"_index":420,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["ainda",{"_index":941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":894,"title":{},"body":{"index.html":{}}}],["ano",{"_index":279,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["ao",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apenas",{"_index":242,"title":{},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/UserController.html":{}}}],["api",{"_index":85,"title":{},"body":{"injectables/AppService.html":{}}}],["apibearerauth",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apioperation({summary",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["apiproperty",{"_index":293,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":339,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({required",{"_index":360,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["apitags",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["apitags('auth",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('game",{"_index":446,"title":{},"body":{"controllers/GameController.html":{}}}],["apitags('genero",{"_index":543,"title":{},"body":{"controllers/GeneroController.html":{}}}],["apitags('perfil",{"_index":630,"title":{},"body":{"controllers/PerfilController.html":{}}}],["apitags('status",{"_index":35,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{}}}],["aplicaçãoneste",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["app",{"_index":683,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":688,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":864,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":51,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":29,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["atrapalha",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["atualizar",{"_index":435,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["autenticado",{"_index":590,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["autenticação",{"_index":100,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":89,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":86,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["authmodule",{"_index":57,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":904,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":123,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":207,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["avaliação",{"_index":264,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["avanços",{"_index":944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aventura",{"_index":211,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["ação",{"_index":210,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["b318",{"_index":231,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["backers",{"_index":895,"title":{},"body":{"index.html":{}}}],["badrequestexception",{"_index":751,"title":{},"body":{"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":769,"title":{},"body":{"injectables/UserService.html":{}}}],["banco",{"_index":758,"title":{},"body":{"injectables/UserService.html":{}}}],["baseurl",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["batatinha@123",{"_index":595,"title":{},"body":{"classes/LoginDto.html":{},"miscellaneous/variables.html":{}}}],["batatinha@123.com",{"_index":593,"title":{},"body":{"classes/LoginDto.html":{}}}],["batatinha@1234",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["batatinha@12345",{"_index":380,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["batatinha@12345'})@minlength(6)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":368,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["bcrypt",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(createuserdto.password",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(data.password",{"_index":782,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(obj.password",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beltrano",{"_index":366,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["betwen",{"_index":259,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["body",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":359,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":807,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":914,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":912,"title":{},"body":{"modules.html":{}}}],["building",{"_index":860,"title":{},"body":{"index.html":{}}}],["buscar",{"_index":429,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["caos",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capa",{"_index":247,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["casal",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["catch(handleerror",{"_index":511,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["chris",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":37,"title":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":187,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":140,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_gamemodule",{"_index":461,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_gamemodule_imports",{"_index":462,"title":{},"body":{"modules/GameModule.html":{}}}],["cluster_gamemodule_providers",{"_index":463,"title":{},"body":{"modules/GameModule.html":{},"overview.html":{}}}],["cluster_generomodule",{"_index":550,"title":{},"body":{"modules/GeneroModule.html":{},"overview.html":{}}}],["cluster_generomodule_imports",{"_index":552,"title":{},"body":{"modules/GeneroModule.html":{}}}],["cluster_generomodule_providers",{"_index":551,"title":{},"body":{"modules/GeneroModule.html":{},"overview.html":{}}}],["cluster_perfilmodule",{"_index":639,"title":{},"body":{"modules/PerfilModule.html":{},"overview.html":{}}}],["cluster_perfilmodule_imports",{"_index":641,"title":{},"body":{"modules/PerfilModule.html":{}}}],["cluster_perfilmodule_providers",{"_index":640,"title":{},"body":{"modules/PerfilModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":670,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":671,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":672,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":785,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_imports",{"_index":786,"title":{},"body":{"modules/UsersModule.html":{}}}],["cluster_usersmodule_providers",{"_index":787,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["coberta",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coelho",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["com",{"_index":312,"title":{},"body":{"classes/CreatePerfilDto.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"miscellaneous/variables.html":{}}}],["conferem",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["confirmação",{"_index":340,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":336,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{}}}],["connect",{"_index":507,"title":{},"body":{"injectables/GameService.html":{},"injectables/PerfilService.html":{}}}],["const",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"classes/UpdateUserDto.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["conta",{"_index":496,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["contas",{"_index":419,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/UserController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('game",{"_index":447,"title":{},"body":{"controllers/GameController.html":{}}}],["controller('genero",{"_index":544,"title":{},"body":{"controllers/GeneroController.html":{}}}],["controller('perfil",{"_index":631,"title":{},"body":{"controllers/PerfilController.html":{}}}],["controller('user",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":790,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["cpf",{"_index":337,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["create",{"_index":406,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":733,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":452,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["create(createuserdto",{"_index":714,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":410,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{}}}],["create(userid",{"_index":647,"title":{},"body":{"injectables/PerfilService.html":{}}}],["createdat",{"_index":388,"title":{},"body":{"classes/Game.html":{},"classes/Genero.html":{},"classes/Perfil.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["creategamedto",{"_index":186,"title":{"classes/CreateGameDto.html":{}},"body":{"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGamesDto.html":{},"coverage.html":{}}}],["creategamedto.description",{"_index":502,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.genero.map((generoid",{"_index":508,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.gplayyturl",{"_index":506,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.imgurl",{"_index":501,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.score",{"_index":504,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.title",{"_index":500,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.trailleryturl",{"_index":505,"title":{},"body":{"injectables/GameService.html":{}}}],["creategamedto.year",{"_index":503,"title":{},"body":{"injectables/GameService.html":{}}}],["creategenerodto",{"_index":299,"title":{"classes/CreateGeneroDto.html":{}},"body":{"classes/CreateGeneroDto.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["createparamdecorator",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createperfildto",{"_index":307,"title":{"classes/CreatePerfilDto.html":{}},"body":{"classes/CreatePerfilDto.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["createperfildto.games.map((gameid",{"_index":661,"title":{},"body":{"injectables/PerfilService.html":{}}}],["createperfildto.imgurl",{"_index":660,"title":{},"body":{"injectables/PerfilService.html":{}}}],["createperfildto.title",{"_index":659,"title":{},"body":{"injectables/PerfilService.html":{}}}],["createuserdto",{"_index":333,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.confirmpassword",{"_index":768,"title":{},"body":{"injectables/UserService.html":{}}}],["createuserdto.password",{"_index":767,"title":{},"body":{"injectables/UserService.html":{}}}],["criar",{"_index":412,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["criação",{"_index":755,"title":{},"body":{"injectables/UserService.html":{}}}],["ctx",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"miscellaneous/variables.html":{}}}],["dados",{"_index":602,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["das",{"_index":756,"title":{},"body":{"injectables/UserService.html":{}}}],["data",{"_index":498,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["date",{"_index":391,"title":{},"body":{"classes/Game.html":{},"classes/Genero.html":{},"classes/Perfil.html":{},"classes/User.html":{}}}],["de",{"_index":99,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":362,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deixa",{"_index":940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["deletar",{"_index":416,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["delete",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":457,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":415,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["delete(':id')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@apioperation({summary",{"_index":716,"title":{},"body":{"controllers/UserController.html":{}}}],["delete(@loggeduser",{"_index":459,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":637,"title":{},"body":{"controllers/PerfilController.html":{}}}],["delete(id",{"_index":615,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{}}}],["delete(user",{"_index":414,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dependencies",{"_index":53,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depois",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["description",{"_index":191,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"index.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["descrição",{"_index":202,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["devastado",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":872,"title":{},"body":{"index.html":{}}}],["diana",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["diana@gmail.com",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["docs",{"_index":82,"title":{},"body":{"injectables/AppService.html":{}}}],["documentation",{"_index":791,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":753,"title":{},"body":{"injectables/UserService.html":{}}}],["dos",{"_index":315,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["dto/create",{"_index":441,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":444,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["e",{"_index":754,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["e2e",{"_index":883,"title":{},"body":{"index.html":{}}}],["ea",{"_index":938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ea4999af",{"_index":233,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["each",{"_index":226,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["efficient",{"_index":861,"title":{},"body":{"index.html":{}}}],["eletrônico",{"_index":209,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["em",{"_index":219,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["email",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enableshutdownhooks",{"_index":678,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":680,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontra",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["encontrado",{"_index":491,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["entities/games.entities",{"_index":443,"title":{},"body":{"controllers/GameController.html":{}}}],["entities/genero.entities",{"_index":542,"title":{},"body":{"controllers/GeneroController.html":{},"injectables/GeneroService.html":{}}}],["entities/perfil.entity",{"_index":629,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{}}}],["entities/user.entity",{"_index":729,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["error",{"_index":853,"title":{},"body":{"miscellaneous/functions.html":{}}}],["escolha",{"_index":322,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["esporte",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["esportes",{"_index":303,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["est",{"_index":589,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["etc",{"_index":305,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["ethan",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["evil",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["example",{"_index":204,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["executioncontext",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["existe",{"_index":588,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["expiresin",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":674,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["extends",{"_index":578,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{}}}],["extractjwt",{"_index":575,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":582,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["f",{"_index":270,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["false",{"_index":361,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["favoritados",{"_index":624,"title":{},"body":{"controllers/PerfilController.html":{}}}],["ferreira",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fifa",{"_index":933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["findall",{"_index":407,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["findall(user",{"_index":718,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findbyid",{"_index":408,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{}}}],["findbyid(@param('id",{"_index":450,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["findbyid(id",{"_index":427,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{}}}],["findone",{"_index":713,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@loggeduser",{"_index":737,"title":{},"body":{"controllers/UserController.html":{}}}],["findone(user",{"_index":722,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["football",{"_index":937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["formato",{"_index":351,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fps",{"_index":302,"title":{},"body":{"classes/CreateGeneroDto.html":{},"miscellaneous/variables.html":{}}}],["fraca",{"_index":372,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["framework",{"_index":859,"title":{},"body":{"index.html":{}}}],["fulano",{"_index":364,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fulano123",{"_index":330,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["fulanosicrano@gmail.com",{"_index":357,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["funcionando",{"_index":761,"title":{},"body":{"injectables/UserService.html":{}}}],["function",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":849,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamentais",{"_index":945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["game",{"_index":386,"title":{"classes/Game.html":{}},"body":{"classes/Game.html":{},"controllers/GameController.html":{},"classes/Genero.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["game.controller",{"_index":465,"title":{},"body":{"modules/GameModule.html":{}}}],["game.service",{"_index":440,"title":{},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{}}}],["game.ts",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["game/game.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["gamecontroller",{"_index":404,"title":{"controllers/GameController.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"coverage.html":{}}}],["gameid",{"_index":662,"title":{},"body":{"injectables/PerfilService.html":{}}}],["gamemodule",{"_index":58,"title":{"modules/GameModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GameModule.html":{},"modules.html":{},"overview.html":{}}}],["gameplay",{"_index":241,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games",{"_index":310,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/Perfil.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["games.dto",{"_index":442,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGamesDto.html":{}}}],["games.dto.ts",{"_index":189,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/UpdateGamesDto.html":{},"coverage.html":{}}}],["games.dto.ts:18",{"_index":275,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:27",{"_index":254,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:39",{"_index":224,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:47",{"_index":282,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:62",{"_index":271,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:70",{"_index":278,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:78",{"_index":245,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["games.dto.ts:86",{"_index":238,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["gameselect",{"_index":468,"title":{},"body":{"injectables/GameService.html":{}}}],["gameservice",{"_index":439,"title":{"injectables/GameService.html":{}},"body":{"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"coverage.html":{},"overview.html":{}}}],["genero",{"_index":192,"title":{"classes/Genero.html":{}},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["genero.controller",{"_index":554,"title":{},"body":{"modules/GeneroModule.html":{}}}],["genero.dto",{"_index":541,"title":{},"body":{"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"classes/UpdateGeneroDto.html":{}}}],["genero.dto.ts",{"_index":301,"title":{},"body":{"classes/CreateGeneroDto.html":{},"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["genero.dto.ts:11",{"_index":306,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["genero.service",{"_index":540,"title":{},"body":{"controllers/GeneroController.html":{},"modules/GeneroModule.html":{}}}],["genero.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["genero/genero.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["generocontroller",{"_index":530,"title":{"controllers/GeneroController.html":{}},"body":{"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"coverage.html":{}}}],["generoid",{"_index":509,"title":{},"body":{"injectables/GameService.html":{}}}],["generomodule",{"_index":59,"title":{"modules/GeneroModule.html":{}},"body":{"modules/AppModule.html":{},"modules/GeneroModule.html":{},"modules.html":{},"overview.html":{}}}],["generos",{"_index":534,"title":{},"body":{"controllers/GeneroController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["generoservice",{"_index":539,"title":{"injectables/GeneroService.html":{}},"body":{"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"coverage.html":{},"overview.html":{}}}],["gerado",{"_index":599,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["get(':id",{"_index":449,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":428,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["get(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":723,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["get()@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":719,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":79,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":855,"title":{"index.html":{}},"body":{}}],["gplayyturl",{"_index":193,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["grade",{"_index":258,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["grand",{"_index":205,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["grow",{"_index":890,"title":{},"body":{"index.html":{}}}],["gta",{"_index":274,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["gta5",{"_index":251,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["handleerror",{"_index":481,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":852,"title":{},"body":{"miscellaneous/functions.html":{}}}],["here",{"_index":901,"title":{},"body":{"index.html":{}}}],["herói",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["horror",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":458,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.ok",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://cdn.cdkeys.com/500x706/media/catalog/product/r/e/resident_evil_village_pc_cover.jpg",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://image.api.playstation.com/vulcan/img/rnd/202111/0822/zdxm9k2cqiq0vktdwf0tkaor.png",{"_index":935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":908,"title":{},"body":{"index.html":{}}}],["https://s2.glbimg.com/pvutlvwhrlm44bi3yyytoeluzw8=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/auth_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2021/1/9/8comg9tkab2pgks1sujq/2013",{"_index":248,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=aredrukxrq8",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=ghtkj9cwcaa",{"_index":244,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=qge5m24c5qs",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=qkkohazjnus",{"_index":277,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=sysi5quojne",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://www.youtube.com/watch?v=vlj",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpstatus",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":389,"title":{},"body":{"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["id:${id",{"_index":489,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{}}}],["identifier",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":314,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["if(!user",{"_index":586,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoreexpiration",{"_index":583,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["imagem",{"_index":246,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["imgurl",{"_index":194,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":685,"title":{},"body":{"injectables/PrismaService.html":{}}}],["import",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["inestapplication",{"_index":681,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["informadas",{"_index":771,"title":{},"body":{"injectables/UserService.html":{}}}],["injectable",{"_index":76,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":77,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["inovações",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["installation",{"_index":869,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":871,"title":{},"body":{"index.html":{}}}],["inválidas",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["inválido",{"_index":384,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inválido'})@apiproperty({description",{"_index":352,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isadmin",{"_index":338,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/PerfilService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["isboolean",{"_index":374,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail",{"_index":375,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isemail()@isstring()@isnotempty()@apiproperty({description",{"_index":356,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isempty",{"_index":376,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ishashvalid",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{}}}],["isint",{"_index":377,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnotempty",{"_index":288,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isnotempty()@isnumber()@min(0",{"_index":256,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnotempty()@isstring()@apiproperty({description",{"_index":272,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{}}}],["isnotempty()@isstring()@maxlength(1300",{"_index":199,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnotempty()@isurl()@apiproperty({description",{"_index":239,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isnumber",{"_index":283,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["ispositive",{"_index":287,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring",{"_index":289,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isemail()@isnotempty()@apiproperty({description",{"_index":592,"title":{},"body":{"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":318,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@isnotempty()@matches(/([0",{"_index":343,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@maxlength(15)@apiproperty({description",{"_index":328,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["isurl",{"_index":290,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["isuuid",{"_index":291,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{}}}],["isuuid(undefined",{"_index":225,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["jogabilidade",{"_index":946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jogado",{"_index":215,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["jogo",{"_index":203,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"controllers/GameController.html":{},"miscellaneous/variables.html":{}}}],["jogos",{"_index":425,"title":{},"body":{"controllers/GameController.html":{},"controllers/PerfilController.html":{}}}],["join",{"_index":897,"title":{},"body":{"index.html":{}}}],["jpg",{"_index":253,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["jwt",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/PerfilModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":581,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":154,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":143,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":905,"title":{},"body":{"index.html":{}}}],["keven",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keven@gmail.com",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lançamento",{"_index":280,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["lendário",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["levando",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":911,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":887,"title":{},"body":{"index.html":{}}}],["link",{"_index":240,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["lista",{"_index":311,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["listar",{"_index":423,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":571,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["local",{"_index":326,"title":{},"body":{"classes/CreatePerfilDto.html":{},"dependencies.html":{}}}],["logado",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["logged",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{}}}],["loggeduser",{"_index":129,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":90,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":92,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":93,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":125,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["long",{"_index":295,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["long!'})@apiproperty({description",{"_index":201,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["mais",{"_index":942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matches",{"_index":378,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":382,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/([0",{"_index":383,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":285,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["max(5",{"_index":297,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["maxlength",{"_index":286,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["maxlength(1300",{"_index":294,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["maxlength(15",{"_index":332,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["message",{"_index":200,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["min",{"_index":284,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["min(0",{"_index":296,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["minlength",{"_index":379,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":381,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":848,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":886,"title":{},"body":{"index.html":{}}}],["mode",{"_index":876,"title":{},"body":{"index.html":{}}}],["modos",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["module",{"_index":50,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["modules",{"_index":52,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{}}}],["moraes",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["more",{"_index":900,"title":{},"body":{"index.html":{}}}],["muito",{"_index":371,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["myśliwiec",{"_index":906,"title":{},"body":{"index.html":{}}}],["na",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["name",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["negado",{"_index":494,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["nest",{"_index":865,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":910,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":823,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":825,"title":{},"body":{"dependencies.html":{}}}],["nestjs/passport",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"controllers/UserController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["neve",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["new",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":858,"title":{},"body":{"index.html":{}}}],["nome",{"_index":329,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{}}}],["nota",{"_index":263,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["notfoundexception",{"_index":480,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":488,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{}}}],["notfoundexception(`usuário",{"_index":766,"title":{},"body":{"injectables/UserService.html":{}}}],["nova",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["novo",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["npm",{"_index":870,"title":{},"body":{"index.html":{}}}],["number",{"_index":255,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{}}}],["não",{"_index":490,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["o",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["obj",{"_index":929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.email",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.genero",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["obj.title",{"_index":932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object",{"_index":476,"title":{},"body":{"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["object.entries(seed",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(games",{"_index":930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(generos",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(users",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["odiei",{"_index":266,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["omittype",{"_index":698,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["onmoduleinit",{"_index":679,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":888,"title":{},"body":{"index.html":{}}}],["optional",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["os",{"_index":313,"title":{},"body":{"classes/CreatePerfilDto.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["ou",{"_index":222,"title":{},"body":{"classes/CreateGameDto.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["out",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":915,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":821,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["para",{"_index":265,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateUserDto.html":{},"injectables/UserService.html":{}}}],["param",{"_index":437,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":455,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/UserController.html":{}}}],["parameters",{"_index":21,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["partial",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["partialtype",{"_index":690,"title":{},"body":{"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(creategamedto",{"_index":691,"title":{},"body":{"classes/UpdateGamesDto.html":{}}}],["partialtype(creategenerodto",{"_index":693,"title":{},"body":{"classes/UpdateGeneroDto.html":{}}}],["partialtype(createperfildto",{"_index":695,"title":{},"body":{"classes/UpdatePerfilDto.html":{}}}],["partir",{"_index":216,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["passport",{"_index":577,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportmodule.register({defaultstrategy",{"_index":466,"title":{},"body":{"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":574,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":579,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patch",{"_index":438,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":454,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":434,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["patch(':id')@useguards(undefined)@apibearerauth()@apioperation({summary",{"_index":725,"title":{},"body":{"controllers/UserController.html":{}}}],["payload",{"_index":573,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":585,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":417,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"classes/LoginResponseDto.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["perfil",{"_index":319,"title":{"classes/Perfil.html":{}},"body":{"classes/CreatePerfilDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"coverage.html":{}}}],["perfil.controller",{"_index":643,"title":{},"body":{"modules/PerfilModule.html":{}}}],["perfil.dto",{"_index":628,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{}}}],["perfil.dto.ts",{"_index":309,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["perfil.dto.ts:12",{"_index":331,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.dto.ts:20",{"_index":327,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.dto.ts:28",{"_index":317,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["perfil.service",{"_index":627,"title":{},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{}}}],["perfil/perfil.module",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["perfilcontroller",{"_index":612,"title":{"controllers/PerfilController.html":{}},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"coverage.html":{}}}],["perfilmodule",{"_index":60,"title":{"modules/PerfilModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PerfilModule.html":{},"modules.html":{},"overview.html":{}}}],["perfilselect",{"_index":645,"title":{},"body":{"injectables/PerfilService.html":{}}}],["perfilservice",{"_index":626,"title":{"injectables/PerfilService.html":{}},"body":{"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"coverage.html":{},"overview.html":{}}}],["perfis",{"_index":617,"title":{},"body":{"controllers/PerfilController.html":{}}}],["perspectiva",{"_index":218,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["pesadelo",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pessoa",{"_index":221,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["picktype",{"_index":699,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["picktype(createuserdto",{"_index":701,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["please",{"_index":898,"title":{},"body":{"index.html":{}}}],["pode",{"_index":213,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["possibilidade",{"_index":622,"title":{},"body":{"controllers/PerfilController.html":{}}}],["post",{"_index":117,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":411,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":94,"title":{},"body":{"controllers/AuthController.html":{}}}],["powered",{"_index":936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prefix",{"_index":88,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["primeira",{"_index":223,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["prisma",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prisma.game.upsert",{"_index":931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.gamecreateinput",{"_index":499,"title":{},"body":{"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["prisma.gameupdateinput",{"_index":513,"title":{},"body":{"injectables/GameService.html":{}}}],["prisma.genero.upsert",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.generocreateinput",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.perfilcreateinput",{"_index":658,"title":{},"body":{"injectables/PerfilService.html":{}}}],["prisma.perfilupdateinput",{"_index":664,"title":{},"body":{"injectables/PerfilService.html":{}}}],["prisma.service",{"_index":675,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.user.upsert",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma.usercreateinput",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prisma/client",{"_index":483,"title":{},"body":{"injectables/GameService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"dependencies.html":{}}}],["prisma/prisma.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":677,"title":{},"body":{"injectables/PrismaService.html":{},"miscellaneous/variables.html":{}}}],["prismamodule",{"_index":61,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["prismaservice",{"_index":164,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["process.env.jwt_secret",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["procurando",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["production",{"_index":878,"title":{},"body":{"index.html":{}}}],["produtos",{"_index":316,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["profile",{"_index":91,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{}}}],["progressive",{"_index":857,"title":{},"body":{"index.html":{}}}],["project",{"_index":889,"title":{},"body":{"index.html":{}}}],["promise",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":190,"title":{"properties.html":{}},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["providers",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{}}}],["qualquer",{"_index":321,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["quanto",{"_index":325,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["que",{"_index":212,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["railway",{"_index":759,"title":{},"body":{"injectables/UserService.html":{}}}],["razoável",{"_index":268,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["read",{"_index":899,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["real",{"_index":943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["realizar",{"_index":95,"title":{},"body":{"controllers/AuthController.html":{}}}],["reaproxima",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["recebendo",{"_index":96,"title":{},"body":{"controllers/AuthController.html":{}}}],["record",{"_index":486,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["redfield",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reflect",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["remota",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remover",{"_index":623,"title":{},"body":{"controllers/PerfilController.html":{}}}],["repository",{"_index":868,"title":{},"body":{"index.html":{}}}],["req",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":45,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":385,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["reset",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resident",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["response.dto",{"_index":127,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":598,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":603,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":601,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["respostas",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["retornar",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["return",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["rimraf",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["rockstar",{"_index":252,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":873,"title":{},"body":{"index.html":{}}}],["running",{"_index":84,"title":{},"body":{"injectables/AppService.html":{}}}],["rxjs",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":862,"title":{},"body":{"index.html":{}}}],["score",{"_index":195,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"injectables/PerfilService.html":{},"miscellaneous/variables.html":{}}}],["se",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secret",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":584,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["seeds",{"_index":810,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["select",{"_index":478,"title":{},"body":{"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["send",{"_index":257,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["senha",{"_index":341,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":770,"title":{},"body":{"injectables/UserService.html":{}}}],["seq",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ser",{"_index":214,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":83,"title":{},"body":{"injectables/AppService.html":{},"index.html":{}}}],["seu",{"_index":418,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["sicrano",{"_index":365,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["side",{"_index":863,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{}}}],["simulação",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["site",{"_index":763,"title":{},"body":{"injectables/UserService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"modules/GameModule.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"modules/GeneroModule.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"modules/PerfilModule.html":{},"injectables/PerfilService.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/UpdateGamesDto.html":{},"classes/UpdateGeneroDto.html":{},"classes/UpdatePerfilDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":892,"title":{},"body":{"index.html":{}}}],["sports",{"_index":939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../01",{"_index":928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../02",{"_index":924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../03",{"_index":925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../handle.error.util.ts",{"_index":851,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../logged",{"_index":926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":850,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../seed.ts",{"_index":927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:13",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":78,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":81,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":87,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:28",{"_index":101,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:38",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":597,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":591,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:12",{"_index":594,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:20",{"_index":596,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":567,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":572,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":569,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/logged",{"_index":445,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/game/dto/create",{"_index":188,"title":{},"body":{"classes/CreateGameDto.html":{},"coverage.html":{}}}],["src/game/dto/update",{"_index":689,"title":{},"body":{"classes/UpdateGamesDto.html":{},"coverage.html":{}}}],["src/game/entities/games.entities",{"_index":529,"title":{},"body":{"classes/Genero.html":{},"classes/Perfil.html":{}}}],["src/game/entities/games.entities.ts",{"_index":387,"title":{},"body":{"classes/Game.html":{},"coverage.html":{}}}],["src/game/entities/games.entities.ts:10",{"_index":400,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:11",{"_index":395,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:12",{"_index":394,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:13",{"_index":392,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:14",{"_index":401,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:4",{"_index":396,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:5",{"_index":399,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:6",{"_index":397,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:7",{"_index":393,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:8",{"_index":402,"title":{},"body":{"classes/Game.html":{}}}],["src/game/entities/games.entities.ts:9",{"_index":398,"title":{},"body":{"classes/Game.html":{}}}],["src/game/game.controller.ts",{"_index":405,"title":{},"body":{"controllers/GameController.html":{},"coverage.html":{}}}],["src/game/game.controller.ts:31",{"_index":426,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:37",{"_index":430,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:43",{"_index":413,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:49",{"_index":436,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.controller.ts:60",{"_index":421,"title":{},"body":{"controllers/GameController.html":{}}}],["src/game/game.module.ts",{"_index":464,"title":{},"body":{"modules/GameModule.html":{}}}],["src/game/game.service.ts",{"_index":467,"title":{},"body":{"injectables/GameService.html":{},"coverage.html":{}}}],["src/game/game.service.ts:113",{"_index":471,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:15",{"_index":479,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:29",{"_index":469,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:33",{"_index":472,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:39",{"_index":473,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:52",{"_index":470,"title":{},"body":{"injectables/GameService.html":{}}}],["src/game/game.service.ts:82",{"_index":475,"title":{},"body":{"injectables/GameService.html":{}}}],["src/genero/dto/create",{"_index":300,"title":{},"body":{"classes/CreateGeneroDto.html":{},"coverage.html":{}}}],["src/genero/dto/update",{"_index":692,"title":{},"body":{"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["src/genero/entities/genero.entities",{"_index":403,"title":{},"body":{"classes/Game.html":{}}}],["src/genero/entities/genero.entities.ts",{"_index":524,"title":{},"body":{"classes/Genero.html":{},"coverage.html":{}}}],["src/genero/entities/genero.entities.ts:4",{"_index":527,"title":{},"body":{"classes/Genero.html":{}}}],["src/genero/entities/genero.entities.ts:5",{"_index":526,"title":{},"body":{"classes/Genero.html":{}}}],["src/genero/entities/genero.entities.ts:6",{"_index":525,"title":{},"body":{"classes/Genero.html":{}}}],["src/genero/entities/genero.entities.ts:7",{"_index":528,"title":{},"body":{"classes/Genero.html":{}}}],["src/genero/genero.controller.ts",{"_index":531,"title":{},"body":{"controllers/GeneroController.html":{},"coverage.html":{}}}],["src/genero/genero.controller.ts:31",{"_index":535,"title":{},"body":{"controllers/GeneroController.html":{}}}],["src/genero/genero.controller.ts:37",{"_index":536,"title":{},"body":{"controllers/GeneroController.html":{}}}],["src/genero/genero.controller.ts:43",{"_index":532,"title":{},"body":{"controllers/GeneroController.html":{}}}],["src/genero/genero.controller.ts:49",{"_index":538,"title":{},"body":{"controllers/GeneroController.html":{}}}],["src/genero/genero.controller.ts:60",{"_index":533,"title":{},"body":{"controllers/GeneroController.html":{}}}],["src/genero/genero.module.ts",{"_index":553,"title":{},"body":{"modules/GeneroModule.html":{}}}],["src/genero/genero.service.ts",{"_index":555,"title":{},"body":{"injectables/GeneroService.html":{},"coverage.html":{}}}],["src/genero/genero.service.ts:14",{"_index":556,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/genero/genero.service.ts:17",{"_index":559,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/genero/genero.service.ts:21",{"_index":560,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/genero/genero.service.ts:31",{"_index":557,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/genero/genero.service.ts:47",{"_index":561,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/genero/genero.service.ts:68",{"_index":558,"title":{},"body":{"injectables/GeneroService.html":{}}}],["src/main.ts",{"_index":805,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/perfil/dto/create",{"_index":308,"title":{},"body":{"classes/CreatePerfilDto.html":{},"coverage.html":{}}}],["src/perfil/dto/update",{"_index":694,"title":{},"body":{"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["src/perfil/entities/perfil.entity.ts",{"_index":604,"title":{},"body":{"classes/Perfil.html":{},"coverage.html":{}}}],["src/perfil/entities/perfil.entity.ts:10",{"_index":605,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:11",{"_index":610,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:5",{"_index":607,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:6",{"_index":609,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:7",{"_index":608,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:8",{"_index":611,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/entities/perfil.entity.ts:9",{"_index":606,"title":{},"body":{"classes/Perfil.html":{}}}],["src/perfil/perfil.controller.ts",{"_index":613,"title":{},"body":{"controllers/PerfilController.html":{},"coverage.html":{}}}],["src/perfil/perfil.controller.ts:31",{"_index":618,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:37",{"_index":619,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:43",{"_index":614,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:52",{"_index":625,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.controller.ts:59",{"_index":616,"title":{},"body":{"controllers/PerfilController.html":{}}}],["src/perfil/perfil.module.ts",{"_index":642,"title":{},"body":{"modules/PerfilModule.html":{}}}],["src/perfil/perfil.service.ts",{"_index":644,"title":{},"body":{"injectables/PerfilService.html":{},"coverage.html":{}}}],["src/perfil/perfil.service.ts:102",{"_index":650,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:11",{"_index":654,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:34",{"_index":646,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:38",{"_index":651,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:46",{"_index":652,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:55",{"_index":648,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/perfil/perfil.service.ts:81",{"_index":653,"title":{},"body":{"injectables/PerfilService.html":{}}}],["src/prisma/prisma.module",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/UsersModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":673,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":676,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":682,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":684,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/seed.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/01",{"_index":811,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/02",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/prisma/seed/03",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/dto/create",{"_index":334,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/update",{"_index":697,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/users/entities/user.entity",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{}}}],["src/users/entities/user.entity.ts",{"_index":702,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/users/entities/user.entity.ts:2",{"_index":706,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:3",{"_index":708,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:4",{"_index":705,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:5",{"_index":709,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:6",{"_index":703,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:7",{"_index":707,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:8",{"_index":704,"title":{},"body":{"classes/User.html":{}}}],["src/users/entities/user.entity.ts:9",{"_index":710,"title":{},"body":{"classes/User.html":{}}}],["src/users/users.controller.ts",{"_index":712,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:17",{"_index":715,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:25",{"_index":721,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:33",{"_index":724,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:41",{"_index":726,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.controller.ts:50",{"_index":717,"title":{},"body":{"controllers/UserController.html":{}}}],["src/users/users.module.ts",{"_index":788,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service.ts",{"_index":742,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/users.service.ts:116",{"_index":746,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:18",{"_index":750,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:27",{"_index":744,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:31",{"_index":747,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:41",{"_index":748,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:62",{"_index":745,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/users.service.ts:84",{"_index":749,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handle.error.util",{"_index":482,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{}}}],["src/utils/handle.error.util.ts",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":874,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":877,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":879,"title":{},"body":{"index.html":{}}}],["started",{"_index":856,"title":{"index.html":{}},"body":{}}],["starter",{"_index":867,"title":{},"body":{"index.html":{}}}],["statements",{"_index":793,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["stay",{"_index":902,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":576,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":80,"title":{},"body":{"injectables/AppService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["sua",{"_index":495,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["summary",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["super",{"_index":580,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":893,"title":{},"body":{"index.html":{},"modules.html":{}}}],["survivor",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["svg",{"_index":913,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":762,"title":{},"body":{"injectables/UserService.html":{},"dependencies.html":{}}}],["série",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabelas",{"_index":757,"title":{},"body":{"injectables/UserService.html":{}}}],["table",{"_index":820,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":819,"title":{},"body":{"coverage.html":{}}}],["tanto",{"_index":323,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["temporada",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terceira",{"_index":220,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["terrivelmente",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terror",{"_index":304,"title":{},"body":{"classes/CreateGeneroDto.html":{}}}],["test",{"_index":882,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":885,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":884,"title":{},"body":{"index.html":{}}}],["testes",{"_index":760,"title":{},"body":{"injectables/UserService.html":{}}}],["tests",{"_index":881,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":891,"title":{},"body":{"index.html":{}}}],["theft",{"_index":206,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["this.$connect",{"_index":686,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":687,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.findbyid(id",{"_index":512,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/PerfilService.html":{}}}],["this.findone(user",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["this.gameselect",{"_index":485,"title":{},"body":{"injectables/GameService.html":{}}}],["this.gameservice.create(user",{"_index":453,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.delete(user",{"_index":460,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findall",{"_index":448,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.findbyid(id",{"_index":451,"title":{},"body":{"controllers/GameController.html":{}}}],["this.gameservice.update(user",{"_index":456,"title":{},"body":{"controllers/GameController.html":{}}}],["this.generoservice.create(user",{"_index":547,"title":{},"body":{"controllers/GeneroController.html":{}}}],["this.generoservice.delete(user",{"_index":549,"title":{},"body":{"controllers/GeneroController.html":{}}}],["this.generoservice.findall",{"_index":545,"title":{},"body":{"controllers/GeneroController.html":{}}}],["this.generoservice.findbyid(id",{"_index":546,"title":{},"body":{"controllers/GeneroController.html":{}}}],["this.generoservice.update(user",{"_index":548,"title":{},"body":{"controllers/GeneroController.html":{}}}],["this.jwtservice.sign",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.perfilselect",{"_index":656,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.perfilservice.create(user.id",{"_index":634,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.delete(id",{"_index":638,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.findall",{"_index":632,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.findbyid(id",{"_index":633,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.perfilservice.update(id",{"_index":636,"title":{},"body":{"controllers/PerfilController.html":{}}}],["this.prisma.game",{"_index":510,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.delete",{"_index":523,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findmany",{"_index":484,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.findunique",{"_index":487,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.game.update",{"_index":522,"title":{},"body":{"injectables/GameService.html":{}}}],["this.prisma.genero",{"_index":564,"title":{},"body":{"injectables/GeneroService.html":{}}}],["this.prisma.genero.delete",{"_index":566,"title":{},"body":{"injectables/GeneroService.html":{}}}],["this.prisma.genero.findmany",{"_index":562,"title":{},"body":{"injectables/GeneroService.html":{}}}],["this.prisma.genero.findunique",{"_index":563,"title":{},"body":{"injectables/GeneroService.html":{}}}],["this.prisma.genero.update",{"_index":565,"title":{},"body":{"injectables/GeneroService.html":{}}}],["this.prisma.perfil",{"_index":663,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.delete",{"_index":669,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.findmany",{"_index":655,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.findunique",{"_index":657,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.perfil.update",{"_index":668,"title":{},"body":{"injectables/PerfilService.html":{}}}],["this.prisma.user",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":764,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.prisma.user.update",{"_index":783,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userselect",{"_index":765,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(user",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall(user",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(user",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(user",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["tipo",{"_index":497,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["tiro",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["title",{"_index":196,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"classes/Perfil.html":{},"injectables/PerfilService.html":{},"miscellaneous/variables.html":{}}}],["titulo",{"_index":273,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["todo",{"_index":752,"title":{},"body":{"injectables/UserService.html":{}}}],["todos",{"_index":424,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":98,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado",{"_index":600,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["totalmente",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":903,"title":{},"body":{"index.html":{}}}],["trailler",{"_index":276,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["trailleryturl",{"_index":197,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["transformer",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":298,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{},"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["true})@apiproperty({description",{"_index":227,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreatePerfilDto.html":{}}}],["twitter",{"_index":909,"title":{},"body":{"index.html":{}}}],["type",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/Game.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/Genero.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"injectables/PrismaService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["types",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":866,"title":{},"body":{"index.html":{}}}],["ui",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["um",{"_index":97,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateGameDto.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["uma",{"_index":217,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["unauthorizedexception",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["unauthorizedexception('credenciais",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["unauthorizedexception('usuario",{"_index":587,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":854,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":880,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":474,"title":{},"body":{"injectables/GameService.html":{},"injectables/JwtStrategy.html":{},"injectables/PerfilService.html":{}}}],["unlicensed",{"_index":922,"title":{},"body":{"properties.html":{}}}],["update",{"_index":409,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["update(@loggeduser",{"_index":739,"title":{},"body":{"controllers/UserController.html":{}}}],["update(@param('id",{"_index":635,"title":{},"body":{"controllers/PerfilController.html":{}}}],["update(id",{"_index":620,"title":{},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{}}}],["update(user",{"_index":431,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":390,"title":{},"body":{"classes/Game.html":{},"classes/Genero.html":{},"classes/Perfil.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updategamedto",{"_index":432,"title":{},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{}}}],["updategamedto.description",{"_index":516,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.genero.map((generoid",{"_index":521,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.gplayyturl",{"_index":520,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.imgurl",{"_index":515,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.score",{"_index":518,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.title",{"_index":514,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.trailleryturl",{"_index":519,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamedto.year",{"_index":517,"title":{},"body":{"injectables/GameService.html":{}}}],["updategamesdto",{"_index":433,"title":{"classes/UpdateGamesDto.html":{}},"body":{"controllers/GameController.html":{},"injectables/GameService.html":{},"classes/UpdateGamesDto.html":{},"coverage.html":{}}}],["updategenerodto",{"_index":537,"title":{"classes/UpdateGeneroDto.html":{}},"body":{"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"classes/UpdateGeneroDto.html":{},"coverage.html":{}}}],["updateperfildto",{"_index":621,"title":{"classes/UpdatePerfilDto.html":{}},"body":{"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/UpdatePerfilDto.html":{},"coverage.html":{}}}],["updateperfildto.games.map((gameid",{"_index":667,"title":{},"body":{"injectables/PerfilService.html":{}}}],["updateperfildto.imgurl",{"_index":666,"title":{},"body":{"injectables/PerfilService.html":{}}}],["updateperfildto.title",{"_index":665,"title":{},"body":{"injectables/PerfilService.html":{}}}],["updateuserdto",{"_index":696,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.confirmpassword",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.isadmin",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.password",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["useguards",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":104,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/GameController.html":{},"injectables/GameService.html":{},"controllers/GeneroController.html":{},"injectables/GeneroService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Perfil.html":{},"controllers/PerfilController.html":{},"injectables/PerfilService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.decorator",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":700,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":335,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:22",{"_index":367,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:31",{"_index":358,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:43",{"_index":373,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":342,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:57",{"_index":355,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:65",{"_index":363,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.isadmin",{"_index":492,"title":{},"body":{"injectables/GameService.html":{},"injectables/GeneroService.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.ts",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["usercontroller",{"_index":711,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userid",{"_index":649,"title":{},"body":{"injectables/PerfilService.html":{}}}],["users",{"_index":813,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["users.controller",{"_index":789,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":728,"title":{},"body":{"controllers/UserController.html":{},"modules/UsersModule.html":{}}}],["users/users.module",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["userselect",{"_index":743,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":727,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":62,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usuario",{"_index":108,"title":{},"body":{"controllers/AuthController.html":{}}}],["usuário",{"_index":320,"title":{},"body":{"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["usuários",{"_index":720,"title":{},"body":{"controllers/UserController.html":{}}}],["v",{"_index":208,"title":{},"body":{"classes/CreateGameDto.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":568,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":570,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":292,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/CreateGeneroDto.html":{},"classes/CreatePerfilDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["value",{"_index":477,"title":{},"body":{"injectables/GameService.html":{},"injectables/PerfilService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":797,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":923,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":920,"title":{},"body":{"properties.html":{}}}],["vida",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vila",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["village",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{}}}],["void",{"_index":422,"title":{},"body":{"controllers/GameController.html":{},"controllers/GeneroController.html":{},"controllers/PerfilController.html":{}}}],["watch",{"_index":875,"title":{},"body":{"index.html":{}}}],["web",{"_index":324,"title":{},"body":{"classes/CreatePerfilDto.html":{}}}],["website",{"_index":907,"title":{},"body":{"index.html":{}}}],["year",{"_index":198,"title":{},"body":{"classes/CreateGameDto.html":{},"classes/Game.html":{},"injectables/GameService.html":{},"miscellaneous/variables.html":{}}}],["you'd",{"_index":896,"title":{},"body":{"index.html":{}}}],["youtube",{"_index":243,"title":{},"body":{"classes/CreateGameDto.html":{}}}],["z",{"_index":370,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":369,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":63,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/GameModule.html":{},"modules/GeneroModule.html":{},"modules/PerfilModule.html":{},"modules/PrismaModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { Request } from 'express';\nimport { ApiTags, ApiOperation } from '@nestjs/swagger';\n\n@ApiTags('status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Visualizar status da aplicação' })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGeneroModule\n\nGeneroModule\n\nAppModule -->\n\nGeneroModule->AppModule\n\n\n\n\n\nPerfilModule\n\nPerfilModule\n\nAppModule -->\n\nPerfilModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            GameModule\n                        \n                        \n                            GeneroModule\n                        \n                        \n                            PerfilModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { GameModule } from './game/game.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { GeneroModule } from './genero/genero.module';\nimport { UsersModule } from './users/users.module';\nimport { PerfilModule } from './perfil/perfil.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [GameModule, PrismaModule, GeneroModule, UsersModule, PerfilModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return {\n      status: 'Server is running! 🚀',\n      docs: baseUrl + '/api',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retornar o usuario logado na aplicaçãoneste momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/auth/auth.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         User\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { LoggedUser } from './logged-user.decorator';\n\n@ApiTags('auth')\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retornar o usuario logado na aplicaçãoneste momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport * as bcrypt from 'bcrypt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Credenciais inválidas');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Credenciais inválidas');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGameDto.html":{"url":"classes/CreateGameDto.html","title":"class - CreateGameDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGameDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/create-games.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                genero\n                            \n                            \n                                GplayYtUrl\n                            \n                            \n                                imgUrl\n                            \n                            \n                                score\n                            \n                            \n                                title\n                            \n                            \n                                traillerYtUrl\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@MaxLength(1300, {message: 'Description is too long!'})@ApiProperty({description: 'Descrição do jogo.', example: 'Grand Theft Auto V é um jogo eletrônico de ação-aventura que pode ser jogado a partir de uma perspectiva em terceira pessoa ou primeira pessoa.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:39\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genero\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Genero do jogo', example: '[\"186a7c97-a030-4737-b318-59ae048d0052\", \"ea4999af-0ced-4e11-abeb-8bf0de0c5d36\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:86\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GplayYtUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsUrl()@ApiProperty({description: 'Link da Gameplay do jogo, apenas do YouTube.', example: 'https://www.youtube.com/watch?v=gHtKJ9cWCaA'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:78\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsUrl()@ApiProperty({description: 'Imagem de capa do jogo.', example: 'https://s2.glbimg.com/pVUTlvwHrlm44bi3yyYTOElUzw8=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/AUTH_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2021/1/9/8cOmg9TkaB2PgkS1sUjQ/2013-04-02-gta5-capa-rockstar-.jpg'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsNumber()@Min(0, {message: 'Send your grade, betwen 0 and 5.'})@Max(5, {message: 'Send your grade, betwen 0 and 5.'})@IsPositive()@ApiProperty({description: 'Nota de avaliação do jogo', example: '0 para Odiei, 3 para Razoável, 5 para Jogo F@#$.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:62\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Titulo do jogo.', example: 'GTA 5'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traillerYtUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsUrl()@ApiProperty({description: 'Link do Trailler do jogo, apenas do YouTube.', example: 'https://www.youtube.com/watch?v=QkkoHAzjnUs'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:70\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Ano de lançamento do jogo.', example: '17/10/2013'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/game/dto/create-games.dto.ts:47\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsNumber,\n  Min,\n  Max,\n  MaxLength,\n  IsPositive,\n  IsNotEmpty,\n  IsString,\n  IsUrl,\n  IsUUID,\n} from 'class-validator';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class CreateGameDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({ description: 'Titulo do jogo.', example: 'GTA 5' })\n  title: string;\n\n  @IsNotEmpty()\n  @IsUrl()\n  @ApiProperty({\n    description: 'Imagem de capa do jogo.',\n    example:\n      'https://s2.glbimg.com/pVUTlvwHrlm44bi3yyYTOElUzw8=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/AUTH_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2021/1/9/8cOmg9TkaB2PgkS1sUjQ/2013-04-02-gta5-capa-rockstar-.jpg',\n  })\n  imgUrl: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @MaxLength(1300, {\n    message: 'Description is too long!',\n  })\n  @ApiProperty({\n    description: 'Descrição do jogo.',\n    example:\n      'Grand Theft Auto V é um jogo eletrônico de ação-aventura que pode ser jogado a partir de uma perspectiva em terceira pessoa ou primeira pessoa.',\n  })\n  description: string;\n\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Ano de lançamento do jogo.',\n    example: '17/10/2013',\n  })\n  year: string;\n\n  @IsNotEmpty()\n  @IsNumber()\n  @Min(0, {\n    message: 'Send your grade, betwen 0 and 5.',\n  })\n  @Max(5, {\n    message: 'Send your grade, betwen 0 and 5.',\n  })\n  @IsPositive()\n  @ApiProperty({\n    description: 'Nota de avaliação do jogo',\n    example: '0 para Odiei, 3 para Razoável, 5 para Jogo F@#$.',\n  })\n  score: number;\n\n  @IsNotEmpty()\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link do Trailler do jogo, apenas do YouTube.',\n    example: 'https://www.youtube.com/watch?v=QkkoHAzjnUs',\n  })\n  traillerYtUrl: string;\n\n  @IsNotEmpty()\n  @IsUrl()\n  @ApiProperty({\n    description: 'Link da Gameplay do jogo, apenas do YouTube.',\n    example: 'https://www.youtube.com/watch?v=gHtKJ9cWCaA',\n  })\n  GplayYtUrl: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Genero do jogo',\n    example:\n      '[\"186a7c97-a030-4737-b318-59ae048d0052\", \"ea4999af-0ced-4e11-abeb-8bf0de0c5d36\"]',\n  })\n  genero: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateGeneroDto.html":{"url":"classes/CreateGeneroDto.html","title":"class - CreateGeneroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateGeneroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genero/dto/create-genero.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                genero\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        genero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()@IsString()@ApiProperty({description: 'Genero do jogo', example: 'FPS, Esportes, Aventura, Terror, etc.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/genero/dto/create-genero.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsUUID } from 'class-validator';\n\nexport class CreateGeneroDto {\n  @IsNotEmpty()\n  @IsString()\n  @ApiProperty({\n    description: 'Genero do jogo',\n    example: 'FPS, Esportes, Aventura, Terror, etc.',\n  })\n  genero: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePerfilDto.html":{"url":"classes/CreatePerfilDto.html","title":"class - CreatePerfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePerfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/dto/create-perfil.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                games\n                            \n                            \n                                imgUrl\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID(undefined, {each: true})@ApiProperty({description: 'Lista com os IDs dos produtos', example: '[\"186a7c97-a030-4737-b318-59ae048d0052\", \"ea4999af-0ced-4e11-abeb-8bf0de0c5d36\"]'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Imagem do perfil de usuário', example: 'Qualquer imagem de escolha do usuário, tanto web quanto local.'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MaxLength(15)@ApiProperty({description: 'Nome do perfil de usuário', example: 'Fulano123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/perfil/dto/create-perfil.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString, IsUUID, MaxLength } from 'class-validator';\n\nexport class CreatePerfilDto {\n  @IsString()\n  @IsNotEmpty()\n  @MaxLength(15)\n  @ApiProperty({\n    description: 'Nome do perfil de usuário',\n    example: 'Fulano123',\n  })\n  title: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Imagem do perfil de usuário',\n    example: 'Qualquer imagem de escolha do usuário, tanto web quanto local.',\n  })\n  imgUrl: string;\n\n  @IsUUID(undefined, { each: true })\n  @ApiProperty({\n    description: 'Lista com os IDs dos produtos',\n    example:\n      '[\"186a7c97-a030-4737-b318-59ae048d0052\", \"ea4999af-0ced-4e11-abeb-8bf0de0c5d36\"]',\n  })\n  games: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Confirmação da Senha do usuário para o login'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@Matches(/([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/, {message: 'Formato CPF inválido'})@ApiProperty({description: 'CPF do usuário', example: '111.222.333-44'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@IsString()@IsNotEmpty()@ApiProperty({description: 'Email do usuário', example: 'fulanosicrano@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({required: false, default: false, example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:65\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Nome do usuário', example: 'Fulano Sicrano de Beltrano'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha de usuário para login', example: 'Batatinha@12345'})@MinLength(6)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'Senha muito fraca!'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport {\n  IsBoolean,\n  IsEmail,\n  IsEmpty,\n  IsInt,\n  IsNotEmpty,\n  IsNumber,\n  IsPositive,\n  IsString,\n  Matches,\n  MinLength,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Nome do usuário',\n    example: 'Fulano Sicrano de Beltrano',\n  })\n  name: string;\n\n  @IsEmail()\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'fulanosicrano@gmail.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha de usuário para login',\n    example: 'Batatinha@12345',\n  })\n  @MinLength(6)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'Senha muito fraca!',\n  })\n  password: string;\n\n  @ApiProperty({ description: 'Confirmação da Senha do usuário para o login' })\n  confirmPassword: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/([0-9]{2}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[\\/]?[0-9]{4}[-]?[0-9]{2})|([0-9]{3}[\\.]?[0-9]{3}[\\.]?[0-9]{3}[-]?[0-9]{2})/, {\n    message: 'Formato CPF inválido'\n  })\n  @ApiProperty({\n    description: 'CPF do usuário',\n    example: '111.222.333-44',\n  })\n  cpf: string;\n\n\n  @ApiProperty({\n    required: false,\n    default: false,\n    example: false,\n  })\n  isAdmin?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Game.html":{"url":"classes/Game.html","title":"class - Game","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Game\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/entities/games.entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                genero\n                            \n                            \n                                GplayYtUrl\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imgUrl\n                            \n                            \n                                score\n                            \n                            \n                                title\n                            \n                            \n                                traillerYtUrl\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                year\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Genero[]\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GplayYtUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        score\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        traillerYtUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        year\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/game/entities/games.entities.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Genero } from \"src/genero/entities/genero.entities\";\n\nexport class Game {\n  id?: string;\n  title: string;\n  imgUrl: string;\n  description: string;\n  year: string;\n  score: number;\n  traillerYtUrl: string;\n  GplayYtUrl: string;\n  genero: Genero[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GameController.html":{"url":"controllers/GameController.html","title":"controller - GameController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GameController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                game\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createGameDto: CreateGameDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um jogo'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createGameDto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um jogo pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os jogos'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Buscar jogos pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, updateGameDto: UpdateGamesDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um jogo pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/game/game.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGameDto\n                                    \n                                                UpdateGamesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { GameService } from './game.service';\nimport { CreateGameDto } from './dto/create-games.dto';\nimport { Game } from './entities/games.entities';\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { UpdateGamesDto } from './dto/update-games.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/users/entities/user.entity';\n\n@ApiTags('game')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('game')\nexport class GameController {\n  constructor(private gameService: GameService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os jogos' })\n  findAll() {\n    return this.gameService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Buscar jogos pelo seu ID, apenas contas Admin' })\n  findById(@Param('id') id: string) {\n    return this.gameService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um jogo' })\n  create(@LoggedUser() user: User, @Body() createGameDto: CreateGameDto) {\n    return this.gameService.create(user, createGameDto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Atualizar um jogo pelo seu ID, apenas contas Admin' })\n  update(\n    @LoggedUser() user: User,\n    @Param('id') id: string,\n    @Body() updateGameDto: UpdateGamesDto,\n  ) {\n    return this.gameService.update(user, id, updateGameDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Deletar um jogo pelo seu ID, apenas contas Admin' })\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    this.gameService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GameModule.html":{"url":"modules/GameModule.html","title":"module - GameModule","body":"\n                   \n\n\n\n\n    Modules\n    GameModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GameModule\n\n\n\ncluster_GameModule_imports\n\n\n\ncluster_GameModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGameModule\n\nGameModule\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/game/game.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GameService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GameController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GameService } from './game.service';\nimport { GameController } from './game.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  providers: [GameService],\n  controllers: [GameController]\n})\nexport class GameModule {}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GameService.html":{"url":"injectables/GameService.html","title":"injectable - GameService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GameService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/game.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                gameSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/game/game.service.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createGameDto: CreateGameDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createGameDto\n                                    \n                                                CreateGameDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:113\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, updateGameDto: UpdateGamesDto)\n                \n            \n\n\n            \n                \n                    Defined in src/game/game.service.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGameDto\n                                    \n                                                UpdateGamesDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        gameSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    title: true,\n    imgUrl: true,\n    description: true,\n    year: true,\n    score: true,\n    traillerYtUrl: true,\n    GplayYtUrl: true,\n    genero: {\n      select: {\n        genero: true,\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/game/game.service.ts:15\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateGameDto } from './dto/create-games.dto';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateGamesDto } from './dto/update-games.dto';\nimport { handleError } from 'src/utils/handle.error.util';\nimport { Prisma } from '@prisma/client';\nimport { User } from 'src/users/entities/user.entity';\n\n@Injectable()\nexport class GameService {\n  private gameSelect = {\n    id: true,\n    title: true,\n    imgUrl: true,\n    description: true,\n    year: true,\n    score: true,\n    traillerYtUrl: true,\n    GplayYtUrl: true,\n    genero: {\n      select: {\n        genero: true,\n      },\n    },\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll() {\n    return this.prisma.game.findMany({\n      select: this.gameSelect,\n    });\n  }\n\n  async findById(id: string) {\n    const record = await this.prisma.game.findUnique({\n      where: { id },\n      select: this.gameSelect,\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o id:${id} não encontrado.`);\n    }\n\n    return record;\n  }\n\n  create(user: User, createGameDto: CreateGameDto) {\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    const data: Prisma.GameCreateInput = {\n      title: createGameDto.title,\n      imgUrl: createGameDto.imgUrl,\n      description: createGameDto.description,\n      year: createGameDto.year,\n      score: createGameDto.score,\n      traillerYtUrl: createGameDto.traillerYtUrl,\n      GplayYtUrl: createGameDto.GplayYtUrl,\n      genero: {\n        connect: createGameDto.genero.map((generoId) => ({\n          id: generoId,\n        })),\n      },\n    };\n\n    return this.prisma.game\n      .create({\n        data,\n        select: this.gameSelect,\n      })\n      .catch(handleError);\n  }\n\n  async update(user: User, id: string, updateGameDto: UpdateGamesDto) {\n    await this.findById(id);\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    const data: Prisma.GameUpdateInput = {\n      title: updateGameDto.title,\n      imgUrl: updateGameDto.imgUrl,\n      description: updateGameDto.description,\n      year: updateGameDto.year,\n      score: updateGameDto.score,\n      traillerYtUrl: updateGameDto.traillerYtUrl,\n      GplayYtUrl: updateGameDto.GplayYtUrl,\n      genero: {\n        connect: updateGameDto.genero.map((generoId) => ({\n          id: generoId,\n        })),\n      },\n    };\n\n    return this.prisma.game.update({\n      where: { id },\n      data,\n      select: this.gameSelect,\n    });\n  }\n\n  async delete(user: User, id: string) {\n    await this.findById(id);\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    await this.prisma.game.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Genero.html":{"url":"classes/Genero.html","title":"class - Genero","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Genero\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genero/entities/genero.entities.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                genero\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genero/entities/genero.entities.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        genero\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genero/entities/genero.entities.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/genero/entities/genero.entities.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/genero/entities/genero.entities.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from \"src/game/entities/games.entities\";\n\nexport class Genero {\n  id?: string;\n  genero: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/GeneroController.html":{"url":"controllers/GeneroController.html","title":"controller - GeneroController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  GeneroController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genero/genero.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                genero\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createGeneroDto: CreateGeneroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um genero, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/genero/genero.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createGeneroDto\n                                    \n                                                CreateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um genero pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/genero/genero.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os generos'})\n                \n            \n\n            \n                \n                    Defined in src/genero/genero.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Buscar generos pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/genero/genero.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, updateGeneroDto: UpdateGeneroDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um genero pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/genero/genero.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGeneroDto\n                                    \n                                                UpdateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { GeneroService } from './genero.service';\nimport { CreateGeneroDto } from './dto/create-genero.dto';\nimport { Genero } from './entities/genero.entities';\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { UpdateGeneroDto } from './dto/update-genero.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from 'src/users/entities/user.entity';\n\n@ApiTags('genero')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('genero')\nexport class GeneroController {\n  constructor(private generoService: GeneroService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os generos' })\n  findAll() {\n    return this.generoService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Buscar generos pelo seu ID' })\n  findById(@Param('id') id: string): Promise {\n    return this.generoService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um genero, apenas contas Admin' })\n  create(@LoggedUser() user: User, @Body() createGeneroDto: CreateGeneroDto) {\n    return this.generoService.create(user, createGeneroDto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({ summary: 'Atualizar um genero pelo seu ID, apenas contas Admin' })\n  update(\n    @LoggedUser() user: User,\n    @Param('id') id: string,\n    @Body() updateGeneroDto: UpdateGeneroDto,\n  ): Promise {\n    return this.generoService.update(user, id, updateGeneroDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Deletar um genero pelo seu ID, apenas contas Admin' })\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    this.generoService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GeneroModule.html":{"url":"modules/GeneroModule.html","title":"module - GeneroModule","body":"\n                   \n\n\n\n\n    Modules\n    GeneroModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_GeneroModule\n\n\n\ncluster_GeneroModule_providers\n\n\n\ncluster_GeneroModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nGeneroModule\n\nGeneroModule\n\nGeneroModule -->\n\nPrismaModule->GeneroModule\n\n\n\n\n\nGeneroService\n\nGeneroService\n\nGeneroModule -->\n\nGeneroService->GeneroModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/genero/genero.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            GeneroService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            GeneroController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { GeneroService } from './genero.service';\nimport { GeneroController } from './genero.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  providers: [GeneroService],\n  controllers: [GeneroController]\n})\nexport class GeneroModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeneroService.html":{"url":"injectables/GeneroService.html","title":"injectable - GeneroService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  GeneroService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genero/genero.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/genero/genero.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createGeneroDto: CreateGeneroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genero/genero.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createGeneroDto\n                                    \n                                                CreateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genero/genero.service.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/genero/genero.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findById\n                        \n                    \n                \n            \n            \n                \n                    \n                    findById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/genero/genero.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, updateGeneroDto: UpdateGeneroDto)\n                \n            \n\n\n            \n                \n                    Defined in src/genero/genero.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateGeneroDto\n                                    \n                                                UpdateGeneroDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateGeneroDto } from './dto/create-genero.dto';\nimport { Genero } from './entities/genero.entities';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateGeneroDto } from './dto/update-genero.dto';\nimport { handleError } from 'src/utils/handle.error.util';\nimport { User } from 'src/users/entities/user.entity';\n\n@Injectable()\nexport class GeneroService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll(): Promise {\n    return this.prisma.genero.findMany();\n  }\n\n  async findById(id: string): Promise {\n    const record = await this.prisma.genero.findUnique({ where: { id } });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com o id:${id} não encontrado.`);\n    }\n\n    return record;\n  }\n\n  create(user: User, createGeneroDto: CreateGeneroDto): Promise {\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Tipo de conta não é Admin',\n      );\n    }\n\n    const genero = { ...createGeneroDto };\n    return this.prisma.genero\n      .create({\n        data: genero,\n      })\n      .catch(handleError);\n  }\n\n  async update(\n    user: User,\n    id: string,\n    updateGeneroDto: UpdateGeneroDto,\n  ): Promise {\n    await this.findById(id);\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    const data = { ...updateGeneroDto };\n\n    return this.prisma.genero.update({\n      where: { id },\n      data,\n    });\n  }\n\n  async delete(user: User, id: string) {\n    await this.findById(id);\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    await this.prisma.genero.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if(!user) {\n      throw new UnauthorizedException('Usuario não existe ou não está autenticado')\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsEmail()@IsNotEmpty()@ApiProperty({description: 'Email do usuário', example: 'batatinha@123.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'Batatinha@123'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login.dto.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsEmail, IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsEmail()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'batatinha@123.com',\n  })\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'Batatinha@123',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Token JWT gerado pelo login', example: 'TOKEN_GERADO'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/users/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'Token JWT gerado pelo login',\n    example: 'TOKEN_GERADO',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Perfil.html":{"url":"classes/Perfil.html","title":"class - Perfil","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Perfil\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/entities/perfil.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                games\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imgUrl\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Game[]\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/perfil/entities/perfil.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Game } from \"src/game/entities/games.entities\";\nimport { User } from \"src/users/entities/user.entity\";\n\nexport class Perfil {\n  id?: string;\n  title: string;\n  imgUrl: string;\n  user: User;\n  games?: Game[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PerfilController.html":{"url":"controllers/PerfilController.html","title":"controller - PerfilController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PerfilController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/perfil.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                perfil\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createPerfilDto: CreatePerfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um Perfil'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPerfilDto\n                                    \n                                                CreatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um Perfil pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:59\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os Perfis'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Buscar Perfis pelo seu ID'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updatePerfilDto: UpdatePerfilDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Atualizar um Perfil pelo seu ID. Possibilidade de remover os jogos favoritados'})\n                \n            \n\n            \n                \n                    Defined in src/perfil/perfil.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePerfilDto\n                                    \n                                                UpdatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  Patch,\n  Post,\n  UseGuards,\n} from '@nestjs/common';\nimport { PerfilService } from './perfil.service';\nimport { CreatePerfilDto } from './dto/create-perfil.dto';\nimport { Perfil } from './entities/perfil.entity';\nimport { ApiTags, ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { UpdatePerfilDto } from './dto/update-perfil.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from '@prisma/client';\n\n@ApiTags('perfil')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('perfil')\nexport class PerfilController {\n  constructor(private perfilService: PerfilService) {}\n\n  @Get()\n  @ApiOperation({ summary: 'Listar todos os Perfis' })\n  findAll() {\n    return this.perfilService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({ summary: 'Buscar Perfis pelo seu ID' })\n  findById(@Param('id') id: string) {\n    return this.perfilService.findById(id);\n  }\n\n  @Post()\n  @ApiOperation({ summary: 'Criar um Perfil' })\n  create(@LoggedUser() user: User, @Body() createPerfilDto: CreatePerfilDto) {\n    return this.perfilService.create(user.id, createPerfilDto);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary:\n      'Atualizar um Perfil pelo seu ID. Possibilidade de remover os jogos favoritados',\n  })\n  update(@Param('id') id: string, @Body() updatePerfilDto: UpdatePerfilDto) {\n    return this.perfilService.update(id, updatePerfilDto);\n  }\n\n  @Delete(':id')\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({ summary: 'Deletar um Perfil pelo seu ID' })\n  delete(@Param('id') id: string) {\n    this.perfilService.delete(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PerfilModule.html":{"url":"modules/PerfilModule.html","title":"module - PerfilModule","body":"\n                   \n\n\n\n\n    Modules\n    PerfilModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PerfilModule\n\n\n\ncluster_PerfilModule_providers\n\n\n\ncluster_PerfilModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nPerfilModule\n\nPerfilModule\n\nPerfilModule -->\n\nPrismaModule->PerfilModule\n\n\n\n\n\nPerfilService\n\nPerfilService\n\nPerfilModule -->\n\nPerfilService->PerfilModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/perfil/perfil.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PerfilService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PerfilController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PerfilService } from './perfil.service';\nimport { PerfilController } from './perfil.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [PerfilController],\n  providers: [PerfilService]\n})\nexport class PerfilModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PerfilService.html":{"url":"injectables/PerfilService.html","title":"injectable - PerfilService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PerfilService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/perfil.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                perfilSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findById\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/perfil/perfil.service.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(userId: string, createPerfilDto: CreatePerfilDto)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createPerfilDto\n                                    \n                                                CreatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:102\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findById\n                        \n                    \n                \n            \n            \n                \nfindById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:46\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updatePerfilDto: UpdatePerfilDto)\n                \n            \n\n\n            \n                \n                    Defined in src/perfil/perfil.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatePerfilDto\n                                    \n                                                UpdatePerfilDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        perfilSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    user: {\n      select: {\n        id: true,\n        name: true,\n        isAdmin: true,\n      },\n    },\n    id: true,\n    title: true,\n    imgUrl: true,\n    game: {\n      select: {\n        title: true,\n        imgUrl: true,\n        score: true,\n        genero: {\n          select: {\n            genero: true,\n          },\n        },\n      },\n    },\n  }\n                    \n                \n                    \n                        \n                                Defined in src/perfil/perfil.service.ts:11\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { CreatePerfilDto } from './dto/create-perfil.dto';\nimport { Perfil } from './entities/perfil.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdatePerfilDto } from './dto/update-perfil.dto';\nimport { handleError } from 'src/utils/handle.error.util';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class PerfilService {\n  private perfilSelect = {\n    user: {\n      select: {\n        id: true,\n        name: true,\n        isAdmin: true,\n      },\n    },\n    id: true,\n    title: true,\n    imgUrl: true,\n    game: {\n      select: {\n        title: true,\n        imgUrl: true,\n        score: true,\n        genero: {\n          select: {\n            genero: true,\n          },\n        },\n      },\n    },\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  findAll() {\n    return this.prisma.perfil.findMany({\n      select: this.perfilSelect,\n    });\n  }\n\n  //\n\n  findById(id: string) {\n    return this.prisma.perfil.findUnique({\n      where: { id },\n      select: this.perfilSelect,\n    });\n  }\n\n  //\n\n  create(userId: string, createPerfilDto: CreatePerfilDto) {\n    const data: Prisma.PerfilCreateInput = {\n      user: {\n        connect: {\n          id: userId,\n        },\n      },\n      title: createPerfilDto.title,\n      imgUrl: createPerfilDto.imgUrl,\n      game: {\n        connect: createPerfilDto.games.map((gameId) => ({\n          id: gameId,\n        })),\n      },\n    };\n\n    return this.prisma.perfil\n      .create({\n        data,\n        select: this.perfilSelect,\n      })\n      .catch(handleError);\n  }\n\n  //\n\n  async update(id: string, updatePerfilDto: UpdatePerfilDto) {\n    await this.findById(id);\n    const data: Prisma.PerfilUpdateInput = {\n      title: updatePerfilDto.title,\n      imgUrl: updatePerfilDto.imgUrl,\n      game: {\n        connect: updatePerfilDto.games.map((gameId) => ({\n          id: gameId,\n        })),\n      },\n    };\n\n    return this.prisma.perfil.update({\n      where: { id },\n      data,\n      select: this.perfilSelect,\n    });\n  }\n\n  //\n\n  async delete(id: string) {\n    await this.findById(id);\n\n    await this.prisma.perfil.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGamesDto.html":{"url":"classes/UpdateGamesDto.html","title":"class - UpdateGamesDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGamesDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/game/dto/update-games.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateGameDto } from \"./create-games.dto\";\n\nexport class UpdateGamesDto extends PartialType(CreateGameDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateGeneroDto.html":{"url":"classes/UpdateGeneroDto.html","title":"class - UpdateGeneroDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateGeneroDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/genero/dto/update-genero.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/swagger\";\nimport { CreateGeneroDto } from \"./create-genero.dto\";\n\nexport class UpdateGeneroDto extends PartialType(CreateGeneroDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatePerfilDto.html":{"url":"classes/UpdatePerfilDto.html","title":"class - UpdatePerfilDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatePerfilDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/perfil/dto/update-perfil.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreatePerfilDto } from './create-perfil.dto';\n\nexport class UpdatePerfilDto extends PartialType(CreatePerfilDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { OmitType, PartialType, PickType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PickType(CreateUserDto, ['name', 'password', 'confirmPassword', 'isAdmin'] as const) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/users/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class User {\n  id?: string;\n  name: string;\n  email: string;\n  password: string;\n  cpf: string;\n  isAdmin?: boolean;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                user\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar um usuário'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@ApiOperation({summary: 'Deletar um usuário pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:50\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Listar todos os usuários, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Listar um usuário pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@UseGuards(undefined)@ApiBearerAuth()@ApiOperation({summary: 'Atualizar um usuário pelo seu ID, apenas contas Admin'})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { UserService } from './users.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LoggedUser } from 'src/auth/logged-user.decorator';\nimport { User } from './entities/user.entity';\n\n@ApiTags('user')\n@Controller('user')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @Post()\n  @ApiOperation({summary: 'Criar um usuário'})\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({summary: 'Listar todos os usuários, apenas contas Admin'})\n  findAll(@LoggedUser() user: User) {\n    return this.userService.findAll(user);\n  }\n\n  @Get(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({summary: 'Listar um usuário pelo seu ID, apenas contas Admin'})\n  findOne(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.userService.findOne(user, id);\n  }\n\n  @Patch(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @ApiOperation({summary: 'Atualizar um usuário pelo seu ID, apenas contas Admin'})\n  update(@LoggedUser() user: User, @Param('id') id: string, @Body() updateUserDto: UpdateUserDto) {\n    return this.userService.update(user, id, updateUserDto);\n  }\n\n  @Delete(':id')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @ApiOperation({summary: 'Deletar um usuário pelo seu ID, apenas contas Admin'})\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.userService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/users/users.service.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createuserDto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createuserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:116\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:18\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n  UnauthorizedException,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { User } from './entities/user.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handle.error.util';\n\n//TODO: DOCUMENTAÇÃO E CRIAÇÃO DAS TABELAS NO BANCO DO RAILWAY PARA TESTES, NÃO ESTÁ FUNCIONANDO O SWAGGER PELO SITE\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    id: true,\n    name: true,\n    email: true,\n    password: false,\n    cpf: true,\n    isAdmin: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async findAll(user: User): Promise {\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    return await this.prisma.user.findMany({ select: this.userSelect });\n  }\n\n  async findOne(user: User, id: string): Promise {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: this.userSelect,\n    });\n\n    if (!user.isAdmin) {\n      throw new UnauthorizedException(\n        'Acesso negado: Sua conta não é do tipo Admin!',\n      );\n    }\n\n    if (!record) {\n      throw new NotFoundException(`Usuário não encontrado.`);\n    }\n\n    return record;\n  }\n\n  //\n\n  async create(createuserDto: CreateUserDto): Promise {\n    if (createuserDto.password !== createuserDto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não conferem');\n    }\n\n    delete createuserDto.confirmPassword;\n\n    const data: User = {\n      ...createuserDto,\n      password: await bcrypt.hash(createuserDto.password, 10),\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: this.userSelect,\n      })\n      .catch(handleError);\n  }\n\n  //\n\n  async update(\n    user: User,\n    id: string,\n    updateUserDto: UpdateUserDto,\n  ): Promise {\n    await this.findOne(user, id);\n\n    if (updateUserDto.password) {\n      if (updateUserDto.password !== updateUserDto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não conferem');\n      }\n    }\n\n    delete updateUserDto.confirmPassword;\n\n    const data: Partial = { ...updateUserDto,\n    isAdmin: updateUserDto.isAdmin,\n   };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n\n    return this.prisma.user.update({\n      where: { id },\n      data,\n      select: this.userSelect,\n    });\n  }\n\n  //\n\n  async delete(user: User, id: string) {\n    await this.findOne(user, id);\n\n    await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_imports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './users.service';\nimport { UserController } from './users.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { AuthGuard, PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({defaultStrategy: 'jwt'})],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/logged-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/dto/create-games.dto.ts\n            \n            class\n            CreateGameDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/game/dto/update-games.dto.ts\n            \n            class\n            UpdateGamesDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/game/entities/games.entities.ts\n            \n            class\n            Game\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/game/game.controller.ts\n            \n            controller\n            GameController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/game/game.service.ts\n            \n            injectable\n            GameService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/genero/dto/create-genero.dto.ts\n            \n            class\n            CreateGeneroDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/genero/dto/update-genero.dto.ts\n            \n            class\n            UpdateGeneroDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/genero/entities/genero.entities.ts\n            \n            class\n            Genero\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/genero/genero.controller.ts\n            \n            controller\n            GeneroController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/genero/genero.service.ts\n            \n            injectable\n            GeneroService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/perfil/dto/create-perfil.dto.ts\n            \n            class\n            CreatePerfilDto\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/perfil/dto/update-perfil.dto.ts\n            \n            class\n            UpdatePerfilDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/perfil/entities/perfil.entity.ts\n            \n            class\n            Perfil\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/perfil/perfil.controller.ts\n            \n            controller\n            PerfilController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/perfil/perfil.service.ts\n            \n            injectable\n            PerfilService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            prisma\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed.ts\n            \n            variable\n            seeds\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            user\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/01-user.ts\n            \n            variable\n            users\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-game.ts\n            \n            variable\n            game\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/02-game.ts\n            \n            variable\n            games\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-genero.ts\n            \n            variable\n            genero\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/seed/03-genero.ts\n            \n            variable\n            generos\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/users/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/utils/handle.error.util.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/mapped-types : ^1.0.1\n        \n            @nestjs/passport : ^8.2.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.14.0\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.5.3\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handle.error.util.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handle.error.util.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GameModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GeneroModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PerfilModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_GameModule\n\n\n\ncluster_GameModule_providers\n\n\n\ncluster_GeneroModule\n\n\n\ncluster_GeneroModule_providers\n\n\n\ncluster_PerfilModule\n\n\n\ncluster_PerfilModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nGameModule\n\nGameModule\n\nAppModule -->\n\nGameModule->AppModule\n\n\n\n\n\nGeneroModule\n\nGeneroModule\n\nAppModule -->\n\nGeneroModule->AppModule\n\n\n\n\n\nPerfilModule\n\nPerfilModule\n\nAppModule -->\n\nPerfilModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nGameModule -->\n\nPrismaModule->GameModule\n\n\n\nGeneroModule -->\n\nPrismaModule->GeneroModule\n\n\n\nPerfilModule -->\n\nPrismaModule->PerfilModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nUsersModule -->\n\nPrismaModule->UsersModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nGameService\n\nGameService\n\nGameModule -->\n\nGameService->GameModule\n\n\n\n\n\nGeneroService\n\nGeneroService\n\nGeneroModule -->\n\nGeneroService->GeneroModule\n\n\n\n\n\nPerfilService\n\nPerfilService\n\nPerfilModule -->\n\nPerfilService->PerfilModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            game   (src/.../02-game.ts)\n                        \n                        \n                            games   (src/.../02-game.ts)\n                        \n                        \n                            genero   (src/.../03-genero.ts)\n                        \n                        \n                            generos   (src/.../03-genero.ts)\n                        \n                        \n                            LoggedUser   (src/.../logged-user.decorator.ts)\n                        \n                        \n                            prisma   (src/.../seed.ts)\n                        \n                        \n                            seeds   (src/.../seed.ts)\n                        \n                        \n                            user   (src/.../01-user.ts)\n                        \n                        \n                            users   (src/.../01-user.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/prisma/seed/02-game.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        game\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(games)) {\n    await prisma.game.upsert({\n      where: { title: obj.title },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        games\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.GameCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    title: 'GTA 5',\n    imgUrl:\n      'https://s2.glbimg.com/pVUTlvwHrlm44bi3yyYTOElUzw8=/1200x/smart/filters:cover():strip_icc()/i.s3.glbimg.com/v1/AUTH_08fbf48bc0524877943fe86e43087e7a/internal_photos/bs/2021/1/9/8cOmg9TkaB2PgkS1sUjQ/2013-04-02-gta5-capa-rockstar-.jpg',\n    description:\n      'Grand Theft Auto V é um jogo eletrônico de ação-aventura que pode ser jogado a partir de uma perspectiva em terceira pessoa ou primeira pessoa.',\n    year: '17/10/2013',\n    score: 5,\n    traillerYtUrl: 'https://www.youtube.com/watch?v=QkkoHAzjnUs',\n    GplayYtUrl: 'https://www.youtube.com/watch?v=gHtKJ9cWCaA',\n  },\n  {\n    title: 'FIFA 22',\n    imgUrl:\n      'https://image.api.playstation.com/vulcan/img/rnd/202111/0822/zDXM9K2cQiq0vKTDwF0TkAor.png',\n    description:\n      'Powered by Football, EA SPORTS FIFA 22 deixa o jogo ainda mais real com avanços fundamentais de jogabilidade e uma nova temporada de inovações em todos os modos.',\n    year: '27/10/2021',\n    score: 5,\n    traillerYtUrl: 'https://www.youtube.com/watch?v=SYsi5QuOJNE',\n    GplayYtUrl: 'https://www.youtube.com/watch?v=vLj-27T-SEQ',\n  },\n  {\n    title: 'Resident Evil Village',\n    imgUrl:\n      'https://cdn.cdkeys.com/500x706/media/catalog/product/r/e/resident_evil_village_pc_cover.jpg',\n    description:\n      'Chris Redfield, o lendário herói da série Resident Evil, se reaproxima do casal e atrapalha terrivelmente sua vida, levando Ethan ao caos. Ethan, devastado, encontra-se em uma remota vila coberta de neve, procurando respostas depois de ser jogado em um pesadelo totalmente novo.',\n    year: '02/05/2021',\n    score: 5,\n    traillerYtUrl: 'https://www.youtube.com/watch?v=Qge5m24C5qs',\n    GplayYtUrl: 'https://www.youtube.com/watch?v=arEdruKxrQ8',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/03-genero.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        genero\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(generos)) {\n    await prisma.genero.upsert({\n      where: { genero: obj.genero },\n      update: {},\n      create: {\n        ...obj,\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.GeneroCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    genero: 'Ação-aventura',\n  },\n  {\n    genero: 'FPS',\n  },\n  {\n    genero: 'Simulação',\n  },\n  {\n    genero: 'Esporte',\n  },\n  {\n    genero: 'Survivor horror',\n  },\n  {\n    genero: 'Tiro em terceira pessoa',\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/logged-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator(\n  (_, ctx: ExecutionContext) => {\n    const request = ctx.switchToHttp().getRequest();\n    const user = request.user;\n    \n    delete user.password;\n\n    return user;\n  }\n)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        prisma\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new PrismaClient()\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        seeds\n                        \n                    \n                \n            \n                \n                    \n                        Default value : Object.entries(seed)\n                    \n                \n\n\n        \n    \n\n    src/prisma/seed/01-user.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (prisma: PrismaClient) => {\n  for (const obj of Object.values(users)) {\n    await prisma.user.upsert({\n      where: { email: obj.email },\n      update: {},\n      create: {\n        ...obj,\n        password: await bcrypt.hash(obj.password, 10),\n      },\n    });\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Prisma.UserCreateInput[]\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    name: 'Keven Ferreira Moraes',\n    email: 'keven@gmail.com',\n    password: 'Batatinha@123',\n    cpf: \"111.222.333-66\",\n    isAdmin: true,\n  },\n  {\n    name: 'Diana Coelho',\n    email: 'diana@gmail.com',\n    password: 'Batatinha@1234',\n    cpf: \"222.333.444-44\",\n    isAdmin: false,\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
